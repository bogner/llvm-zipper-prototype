//===----------------------------------------------------------------------===//////                     The LLVM Compiler Infrastructure//// This file is distributed under the University of Illinois Open Source// License. See LICENSE.TXT for details.////===----------------------------------------------------------------------===//// <functional>// result_of<Fn(ArgTypes...)>#include <type_traits>typedef bool (&PF1)();typedef short (*PF2)(long);struct S{    operator PF2() const;    double operator()(char, int&);};int main(){    static_assert((std::is_same<std::result_of<S(int)>::type, short>::value), "Error!");    static_assert((std::is_same<std::result_of<S&(unsigned char, int&)>::type, double>::value), "Error!");    static_assert((std::is_same<std::result_of<PF1()>::type, bool>::value), "Error!");}