RUN: lld -flavor old-gnu -target hexagon -static --output-filetype=yaml \
RUN: %p/Inputs/branch-test.hexagon %p/Inputs/target-test.hexagon --noinhibit-exec | FileCheck %s -check-prefix hexagon-yaml
RUN: lld -flavor old-gnu -target hexagon -e target -o %t1 \
RUN: %p/Inputs/branch-test.hexagon %p/Inputs/target-test.hexagon --noinhibit-exec
RUN: llvm-readobj -h %t1 |  FileCheck -check-prefix=hexagon-readobj %s

hexagon-yaml:    - name:              back
hexagon-yaml:      scope:             global
hexagon-yaml:      content:           [ 00, C0, 00, 7F, 00, C0, 00, 5A, 00, 00, 00, 00,
hexagon-yaml:                           00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00 ]
hexagon-yaml:      references:
hexagon-yaml:       - kind:
hexagon-yaml:         offset:            4
hexagon-yaml:         target:            target

hexagon-yaml:    - name:              target
hexagon-yaml:      scope:             global
hexagon-yaml:      content:           [ 00, C0, 00, 5A ]
hexagon-yaml:      references:
hexagon-yaml:      - kind:
hexagon-yaml:        offset:            0
hexagon-yaml:        target:            back


hexagon-readobj: ElfHeader {
hexagon-readobj:   Ident {
hexagon-readobj:     Class: 32-bit (0x1)
hexagon-readobj:     DataEncoding: LittleEndian (0x1)
hexagon-readobj:     FileVersion: 1
hexagon-readobj:     OS/ABI: SystemV (0x0)
hexagon-readobj:     ABIVersion: 0
hexagon-readobj:   }
hexagon-readobj:   Type: Executable (0x2)
hexagon-readobj:   Machine: EM_HEXAGON (0xA4)
