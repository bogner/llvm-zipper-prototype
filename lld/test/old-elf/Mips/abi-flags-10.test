# Check that SHT_MIPS_REGINFO section does not get a separate segment
# if there is a SHT_MIPS_ABIFLAGS section.

# RUN: yaml2obj -format=elf %s > %t.o
# RUN: lld -flavor old-gnu -target mipsel -e T0 -o %t.exe %t.o
# RUN: llvm-readobj -program-headers %t.exe | FileCheck %s

# CHECK:      ProgramHeaders [
# CHECK-NEXT:   ProgramHeader {
# CHECK-NEXT:     Type: PT_PHDR
# CHECK:        }
# CHECK-NEXT:   ProgramHeader {
# CHECK-NEXT:     Type: PT_INTERP
# CHECK:        }
# CHECK-NEXT:   ProgramHeader {
# CHECK-NEXT:     Type: PT_MIPS_ABIFLAGS
# CHECK:        }
# CHECK-NOT:      Type: PT_MIPS_REGINFO

FileHeader:
  Class:   ELFCLASS32
  Data:    ELFDATA2LSB
  Type:    ET_REL
  Machine: EM_MIPS
  Flags:   [EF_MIPS_PIC, EF_MIPS_CPIC, EF_MIPS_ABI_O32, EF_MIPS_ARCH_32R2]

Sections:
- Name:         .text
  Type:         SHT_PROGBITS
  Flags:        [ SHF_ALLOC, SHF_EXECINSTR ]
  Size:         4
  AddressAlign: 16

- Name:         .reginfo
  Type:         SHT_MIPS_REGINFO
  Flags:        [ SHF_ALLOC ]
  AddressAlign: 4
  Content:      "F0000000E0000000D0000000C0000000B000000000100000"

- Name: .MIPS.abiflags
  Type: SHT_MIPS_ABIFLAGS
  AddressAlign: 8
  ISA:          MIPS32
  ISARevision:  2
  ISAExtension: EXT_NONE
  ASEs:         [ MICROMIPS ]
  FpABI:        FP_XX
  GPRSize:      REG_32
  CPR1Size:     REG_32
  CPR2Size:     REG_NONE
  Flags1:       [ ]
  Flags2:       0x0

Symbols:
  Global:
    - Name:    T0
      Section: .text
      Type:    STT_FUNC
      Value:   0
      Size:    4
