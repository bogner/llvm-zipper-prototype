# Tests entry point handling
#
# Test generated using the source file below:
#
#  int main()
#  {
#    return 0;
#  }
#

# RUN: lld-core -reader YAML %s -writer ELF --entry=_entrypoint -o %t1
# RUN: llvm-nm -n %t1 | FileCheck %s
# 
# CHECK:  00000080 T main
# CHECK:  00001000 A _end
# CHECK:  00001000 A end
# CHECK:           U _entrypoint

defined-atoms:   
  - name:            .text
    alignment:       2^4
    section-choice:  custom-required
    section-name:    .text
  - name:            main
    scope:           global
    content:         [ B8, 00, 00, 00, 00, C7, 44, 24, FC, 00, 00, 00, 
                       00, C3 ]
    alignment:       2^4
    section-choice:  custom-required
    section-name:    .text
  - name:            .data
    type:            data
    alignment:       2^2
    section-choice:  custom-required
    section-name:    .data
  - name:            .bss
    type:            zero-fill
    alignment:       2^2
    section-choice:  custom-required
    section-name:    .bss
  - name:            .note.GNU-stack
    section-choice:  custom-required
    section-name:    .note.GNU-stack
    permissions:     r--
  - name:            .eh_frame
    content:         [ 14, 00, 00, 00, 00, 00, 00, 00, 01, 7A, 52, 00, 
                       01, 78, 10, 01, 1B, 0C, 07, 08, 90, 01, 00, 00, 
                       14, 00, 00, 00, 1C, 00, 00, 00, 00, 00, 00, 00, 
                       0E, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00 ]
    alignment:       2^3
    section-choice:  custom-required
    section-name:    .eh_frame
    permissions:     r--
    references:      
      - kind:            call32
        offset:          32
        target:          .text
