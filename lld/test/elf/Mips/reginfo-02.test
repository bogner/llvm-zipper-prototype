# Check merging input .reginfo sections.

# RUN: yaml2obj -format=elf -docnum 1 %s > %t1.o
# RUN: yaml2obj -format=elf -docnum 2 %s > %t2.o
# RUN: lld -flavor gnu -target mipsel -shared -o %t.so %t1.o %t2.o
# RUN: llvm-objdump -s -t %t.so | FileCheck %s

# CHECK:      Contents of section .reginfo:
# CHECK-NEXT:  00b4 f0000001 e0000002 d0000003 c0000004
# CHECK-NEXT:  00c4 b0000005 f08f0000

# CHECK: SYMBOL TABLE:
# CHECK: 00008ff0 g *ABS* 00000000 _gp

# t1.o
---
FileHeader:
  Class:   ELFCLASS32
  Data:    ELFDATA2LSB
  Type:    ET_REL
  Machine: EM_MIPS
  Flags:   [EF_MIPS_CPIC, EF_MIPS_ABI_O32, EF_MIPS_ARCH_32R2]

Sections:
- Name:         .text
  Type:         SHT_PROGBITS
  Size:         4
  AddressAlign: 16
  Flags:        [ SHF_ALLOC, SHF_EXECINSTR ]

- Name:         .reginfo
  Type:         SHT_MIPS_REGINFO
  Flags:        [ SHF_ALLOC ]
  AddressAlign: 4
  Content:      "F0000000E0000000D0000000C0000000B000000000100000"

Symbols:
  Global:
    - Name:    T0
      Section: .text
      Type:    STT_FUNC
      Value:   0
      Size:    4

# t2.o
---
FileHeader:
  Class:   ELFCLASS32
  Data:    ELFDATA2LSB
  Type:    ET_REL
  Machine: EM_MIPS
  Flags:   [EF_MIPS_CPIC, EF_MIPS_ABI_O32, EF_MIPS_ARCH_32R2]

Sections:
- Name:         .text
  Type:         SHT_PROGBITS
  Size:         4
  AddressAlign: 16
  Flags:        [ SHF_ALLOC, SHF_EXECINSTR ]

- Name:         .reginfo
  Type:         SHT_MIPS_REGINFO
  Flags:        [ SHF_ALLOC ]
  AddressAlign: 4
  Content:      "000000010000000200000003000000040000000500000100"

Symbols:
  Global:
    - Name:    T1
      Section: .text
      Type:    STT_FUNC
      Value:   0
      Size:    4
...
