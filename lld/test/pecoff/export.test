# RUN: yaml2obj %p/Inputs/export.obj.yaml > %t.obj
#
# RUN: lld -flavor link /out:%t1.dll /dll /entry:init \
# RUN:   /export:exportfn1 /export:exportfn2 -- %t.obj
# RUN: llvm-objdump -p %t1.dll | FileCheck -check-prefix=CHECK1 %s

CHECK1:      Export Table:
CHECK1:      DLL name: export.test.tmp1.dll
CHECK1:       Ordinal      RVA  Name
CHECK1-NEXT:       1   0x2008  exportfn1
CHECK1-NEXT:       2   0x2010  exportfn2

# RUN: lld -flavor link /out:%t2.dll /dll /subsystem:console /entry:init \
# RUN:   /export:exportfn1,@5 /export:exportfn2 -- %t.obj
# RUN: llvm-objdump -p %t2.dll | FileCheck -check-prefix=CHECK2 %s

CHECK2:      Export Table:
CHECK2:      DLL name: export.test.tmp2.dll
CHECK2:       Ordinal      RVA  Name
CHECK2-NEXT:        5   0x2008  exportfn1
CHECK2-NEXT:        6   0x2010  exportfn2

# RUN: lld -flavor link /out:%t3.dll /dll /subsystem:console /entry:init \
# RUN:   /export:exportfn1,@5,noname /export:exportfn2 -- %t.obj
# RUN: llvm-objdump -p %t3.dll | FileCheck -check-prefix=CHECK3 %s

CHECK3:      Export Table:
CHECK3:      DLL name: export.test.tmp3.dll
CHECK3:       Ordinal      RVA  Name
CHECK3-NEXT:        5   0x2008
CHECK3-NEXT:        6   0x2010  exportfn2

# RUN: lld -flavor link /out:%t4.dll /dll /entry:init \
# RUN:   /def:%p/Inputs/exports.def -- %t.obj
# RUN: llvm-objdump -p %t4.dll | FileCheck -check-prefix=CHECK4 %s

CHECK4:      Export Table:
CHECK4:      DLL name: export.test.tmp4.dll
CHECK4:       Ordinal      RVA  Name
CHECK4-NEXT:        5   0x2008  exportfn1
CHECK4-NEXT:        6   0x2010  exportfn2
CHECK4-NEXT:        7   0x2010  exportfn6
CHECK4-NEXT:        8   0x2010  exportfn3@256
