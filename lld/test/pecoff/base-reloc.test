# RUN: yaml2obj %p/Inputs/hello.obj.yaml > %t.obj
#
# RUN: lld -flavor link /out:%t1 /subsystem:console /force -- %t.obj \
# RUN:   && llvm-objdump -s %t1 | FileCheck %s --check-prefix=BASEREL-SECTION
#
# RUN: lld -flavor link /out:%t1 /subsystem:console /force /fixed -- %t.obj \
# RUN:   && llvm-objdump -s %t1 | FileCheck %s --check-prefix=NOBASEREL-SECTION

# Because llvm-objdump cannot pretty-print the contents of .reloc section, we
# have no choice other than comparing the result with this binary blob.
#
# TODO: Improve llvm-objdump to pretty print .reloc section as GNU binutil
# objdump does.

BASEREL-SECTION: Contents of section .reloc:
BASEREL-SECTION-NEXT:  3000 00100000 0c000000 07300c30 00000000  .........0.0....

NOBASEREL-SECTION-NOT: Contents of section .reloc:

# RUN: lld -flavor link /out:%t1 /subsystem:console /force -- %t.obj \
# RUN:   && llvm-readobj -file-headers %t1 \
# RUN:   | FileCheck %s --check-prefix=BASEREL1
#
# RUN: lld -flavor link /out:%t1 /subsystem:console /force /fixed -- %t.obj \
# RUN:   && llvm-readobj -file-headers %t1 \
# RUN:   | FileCheck %s --check-prefix=BASEREL2

BASEREL1-NOT: IMAGE_FILE_RELOCS_STRIPPED
BASEREL1: IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE

BASEREL2: IMAGE_FILE_RELOCS_STRIPPED
BASEREL2-NOT: IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE
