lib/Core
~~~~~~~~

* Add endianness support to the native reader and writer.

* The NativeReader has lots of similar code for converting arrays of ivar
  data in mapped memory into arrays of objects.  The commonality can be
  factored out, maybe templatized.

* The NativeFileFormat.h is old school C structs and constants.  We scope
  things better by defining constants used with a struct inside the struct
  declaration.

* The native reader and writer currently just blast in memory enumeration
  values (e.g. DefinedAtom::Scope) into a byte in the disk format.  To support
  future changes to the enumerations, there should be a translation layer
  to map disk values to in-memory values.

* The Platform interface needs to be refactored.  There should be less work
  done in the platform.  Instead the Platform should just be a bunch of
  predicate member functcions which direct the Resolver in how to operate.
  Subclasses of Platform can set the predicate values in their constructors. An
  alternative to having the platform provide this directly is to have the
  Platform return a LinkInfo object similar to MCAsmInfo and friends.

* The YamlReader should be converted to use LLVM's Support::YAMLParser.
