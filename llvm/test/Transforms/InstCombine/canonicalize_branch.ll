; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -instcombine -S | FileCheck %s

; Test an already canonical branch to make sure we don't flip those.
define i32 @eq(i32 %X, i32 %Y) {
; CHECK-LABEL: @eq(
; CHECK-NEXT:    [[C:%.*]] = icmp eq i32 [[X:%.*]], [[Y:%.*]]
; CHECK-NEXT:    br i1 [[C]], label [[T:%.*]], label [[F:%.*]], !prof !0
; CHECK:       T:
; CHECK-NEXT:    ret i32 12
; CHECK:       F:
; CHECK-NEXT:    ret i32 123
;
  %C = icmp eq i32 %X, %Y
  br i1 %C, label %T, label %F, !prof !0
T:
  ret i32 12
F:
  ret i32 123
}

define i32 @ne(i32 %X, i32 %Y) {
; CHECK-LABEL: @ne(
; CHECK-NEXT:    [[C:%.*]] = icmp eq i32 [[X:%.*]], [[Y:%.*]]
; CHECK-NEXT:    br i1 [[C]], label [[F:%.*]], label [[T:%.*]], !prof !1
; CHECK:       T:
; CHECK-NEXT:    ret i32 12
; CHECK:       F:
; CHECK-NEXT:    ret i32 123
;
  %C = icmp ne i32 %X, %Y
  br i1 %C, label %T, label %F, !prof !1
T:
  ret i32 12
F:
  ret i32 123
}

define i32 @ule(i32 %X, i32 %Y) {
; CHECK-LABEL: @ule(
; CHECK-NEXT:    [[C:%.*]] = icmp ugt i32 [[X:%.*]], [[Y:%.*]]
; CHECK-NEXT:    br i1 [[C]], label [[F:%.*]], label [[T:%.*]], !prof !2
; CHECK:       T:
; CHECK-NEXT:    ret i32 12
; CHECK:       F:
; CHECK-NEXT:    ret i32 123
;
  %C = icmp ule i32 %X, %Y
  br i1 %C, label %T, label %F, !prof !2
T:
  ret i32 12
F:
  ret i32 123
}

define i32 @uge(i32 %X, i32 %Y) {
; CHECK-LABEL: @uge(
; CHECK-NEXT:    [[C:%.*]] = icmp ult i32 [[X:%.*]], [[Y:%.*]]
; CHECK-NEXT:    br i1 [[C]], label [[F:%.*]], label [[T:%.*]], !prof !3
; CHECK:       T:
; CHECK-NEXT:    ret i32 12
; CHECK:       F:
; CHECK-NEXT:    ret i32 123
;
  %C = icmp uge i32 %X, %Y
  br i1 %C, label %T, label %F, !prof !3
T:
  ret i32 12
F:
  ret i32 123
}

!0 = !{!"branch_weights", i32 1, i32 2}
!1 = !{!"branch_weights", i32 3, i32 4}
!2 = !{!"branch_weights", i32 5, i32 6}
!3 = !{!"branch_weights", i32 7, i32 8}

; Base case shouldn't change.
; CHECK: !0 = {{.*}} i32 1, i32 2}
; Ensure that the branch metadata is reversed to match the reversals above.
; CHECK: !1 = {{.*}} i32 4, i32 3}
; CHECK: !2 = {{.*}} i32 6, i32 5}
; CHECK: !3 = {{.*}} i32 8, i32 7}

