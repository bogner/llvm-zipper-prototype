; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -mtriple=x86_64-unknown -basicaa -slp-vectorizer -S | FileCheck %s --check-prefix=CHECK --check-prefix=SSE
; RUN: opt < %s -mtriple=x86_64-unknown -mcpu=corei7-avx -basicaa -slp-vectorizer -S | FileCheck %s --check-prefix=CHECK --check-prefix=AVX
; RUN: opt < %s -mtriple=x86_64-unknown -mcpu=core-avx2 -basicaa -slp-vectorizer -S | FileCheck %s --check-prefix=CHECK --check-prefix=AVX
; RUN: opt < %s -mtriple=x86_64-unknown -mcpu=skx -basicaa -slp-vectorizer -S | FileCheck %s --check-prefix=CHECK --check-prefix=AVX

;
; 128-bit Vectors
;

define <2 x double> @buildvector_add_2f64(<2 x double> %a, <2 x double> %b) {
; CHECK-LABEL: @buildvector_add_2f64(
; CHECK-NEXT:    [[TMP1:%.*]] = fadd <2 x double> %a, %b
; CHECK-NEXT:    [[TMP2:%.*]] = extractelement <2 x double> [[TMP1]], i32 0
; CHECK-NEXT:    [[R0:%.*]] = insertelement <2 x double> undef, double [[TMP2]], i32 0
; CHECK-NEXT:    [[TMP3:%.*]] = extractelement <2 x double> [[TMP1]], i32 1
; CHECK-NEXT:    [[R1:%.*]] = insertelement <2 x double> [[R0]], double [[TMP3]], i32 1
; CHECK-NEXT:    ret <2 x double> [[R1]]
;
  %a0 = extractelement <2 x double> %a, i32 0
  %a1 = extractelement <2 x double> %a, i32 1
  %b0 = extractelement <2 x double> %b, i32 0
  %b1 = extractelement <2 x double> %b, i32 1
  %c0 = fadd double %a0, %b0
  %c1 = fadd double %a1, %b1
  %r0 = insertelement <2 x double> undef, double %c0, i32 0
  %r1 = insertelement <2 x double> %r0,   double %c1, i32 1
  ret <2 x double> %r1
}

define <2 x double> @buildvector_sub_2f64(<2 x double> %a, <2 x double> %b) {
; CHECK-LABEL: @buildvector_sub_2f64(
; CHECK-NEXT:    [[TMP1:%.*]] = fsub <2 x double> %a, %b
; CHECK-NEXT:    [[TMP2:%.*]] = extractelement <2 x double> [[TMP1]], i32 0
; CHECK-NEXT:    [[R0:%.*]] = insertelement <2 x double> undef, double [[TMP2]], i32 0
; CHECK-NEXT:    [[TMP3:%.*]] = extractelement <2 x double> [[TMP1]], i32 1
; CHECK-NEXT:    [[R1:%.*]] = insertelement <2 x double> [[R0]], double [[TMP3]], i32 1
; CHECK-NEXT:    ret <2 x double> [[R1]]
;
  %a0 = extractelement <2 x double> %a, i32 0
  %a1 = extractelement <2 x double> %a, i32 1
  %b0 = extractelement <2 x double> %b, i32 0
  %b1 = extractelement <2 x double> %b, i32 1
  %c0 = fsub double %a0, %b0
  %c1 = fsub double %a1, %b1
  %r0 = insertelement <2 x double> undef, double %c0, i32 0
  %r1 = insertelement <2 x double> %r0,   double %c1, i32 1
  ret <2 x double> %r1
}

define <2 x double> @buildvector_mul_2f64(<2 x double> %a, <2 x double> %b) {
; CHECK-LABEL: @buildvector_mul_2f64(
; CHECK-NEXT:    [[TMP1:%.*]] = fmul <2 x double> %a, %b
; CHECK-NEXT:    [[TMP2:%.*]] = extractelement <2 x double> [[TMP1]], i32 0
; CHECK-NEXT:    [[R0:%.*]] = insertelement <2 x double> undef, double [[TMP2]], i32 0
; CHECK-NEXT:    [[TMP3:%.*]] = extractelement <2 x double> [[TMP1]], i32 1
; CHECK-NEXT:    [[R1:%.*]] = insertelement <2 x double> [[R0]], double [[TMP3]], i32 1
; CHECK-NEXT:    ret <2 x double> [[R1]]
;
  %a0 = extractelement <2 x double> %a, i32 0
  %a1 = extractelement <2 x double> %a, i32 1
  %b0 = extractelement <2 x double> %b, i32 0
  %b1 = extractelement <2 x double> %b, i32 1
  %c0 = fmul double %a0, %b0
  %c1 = fmul double %a1, %b1
  %r0 = insertelement <2 x double> undef, double %c0, i32 0
  %r1 = insertelement <2 x double> %r0,   double %c1, i32 1
  ret <2 x double> %r1
}

define <2 x double> @buildvector_div_2f64(<2 x double> %a, <2 x double> %b) {
; CHECK-LABEL: @buildvector_div_2f64(
; CHECK-NEXT:    [[TMP1:%.*]] = fdiv <2 x double> %a, %b
; CHECK-NEXT:    [[TMP2:%.*]] = extractelement <2 x double> [[TMP1]], i32 0
; CHECK-NEXT:    [[R0:%.*]] = insertelement <2 x double> undef, double [[TMP2]], i32 0
; CHECK-NEXT:    [[TMP3:%.*]] = extractelement <2 x double> [[TMP1]], i32 1
; CHECK-NEXT:    [[R1:%.*]] = insertelement <2 x double> [[R0]], double [[TMP3]], i32 1
; CHECK-NEXT:    ret <2 x double> [[R1]]
;
  %a0 = extractelement <2 x double> %a, i32 0
  %a1 = extractelement <2 x double> %a, i32 1
  %b0 = extractelement <2 x double> %b, i32 0
  %b1 = extractelement <2 x double> %b, i32 1
  %c0 = fdiv double %a0, %b0
  %c1 = fdiv double %a1, %b1
  %r0 = insertelement <2 x double> undef, double %c0, i32 0
  %r1 = insertelement <2 x double> %r0,   double %c1, i32 1
  ret <2 x double> %r1
}

define <4 x float> @buildvector_add_4f32(<4 x float> %a, <4 x float> %b) {
; CHECK-LABEL: @buildvector_add_4f32(
; CHECK-NEXT:    [[TMP1:%.*]] = fadd <4 x float> %a, %b
; CHECK-NEXT:    [[TMP2:%.*]] = extractelement <4 x float> [[TMP1]], i32 0
; CHECK-NEXT:    [[R0:%.*]] = insertelement <4 x float> undef, float [[TMP2]], i32 0
; CHECK-NEXT:    [[TMP3:%.*]] = extractelement <4 x float> [[TMP1]], i32 1
; CHECK-NEXT:    [[R1:%.*]] = insertelement <4 x float> [[R0]], float [[TMP3]], i32 1
; CHECK-NEXT:    [[TMP4:%.*]] = extractelement <4 x float> [[TMP1]], i32 2
; CHECK-NEXT:    [[R2:%.*]] = insertelement <4 x float> [[R1]], float [[TMP4]], i32 2
; CHECK-NEXT:    [[TMP5:%.*]] = extractelement <4 x float> [[TMP1]], i32 3
; CHECK-NEXT:    [[R3:%.*]] = insertelement <4 x float> [[R2]], float [[TMP5]], i32 3
; CHECK-NEXT:    ret <4 x float> [[R3]]
;
  %a0 = extractelement <4 x float> %a, i32 0
  %a1 = extractelement <4 x float> %a, i32 1
  %a2 = extractelement <4 x float> %a, i32 2
  %a3 = extractelement <4 x float> %a, i32 3
  %b0 = extractelement <4 x float> %b, i32 0
  %b1 = extractelement <4 x float> %b, i32 1
  %b2 = extractelement <4 x float> %b, i32 2
  %b3 = extractelement <4 x float> %b, i32 3
  %c0 = fadd float %a0, %b0
  %c1 = fadd float %a1, %b1
  %c2 = fadd float %a2, %b2
  %c3 = fadd float %a3, %b3
  %r0 = insertelement <4 x float> undef, float %c0, i32 0
  %r1 = insertelement <4 x float> %r0,   float %c1, i32 1
  %r2 = insertelement <4 x float> %r1,   float %c2, i32 2
  %r3 = insertelement <4 x float> %r2,   float %c3, i32 3
  ret <4 x float> %r3
}

define <4 x float> @buildvector_sub_4f32(<4 x float> %a, <4 x float> %b) {
; CHECK-LABEL: @buildvector_sub_4f32(
; CHECK-NEXT:    [[TMP1:%.*]] = fsub <4 x float> %a, %b
; CHECK-NEXT:    [[TMP2:%.*]] = extractelement <4 x float> [[TMP1]], i32 0
; CHECK-NEXT:    [[R0:%.*]] = insertelement <4 x float> undef, float [[TMP2]], i32 0
; CHECK-NEXT:    [[TMP3:%.*]] = extractelement <4 x float> [[TMP1]], i32 1
; CHECK-NEXT:    [[R1:%.*]] = insertelement <4 x float> [[R0]], float [[TMP3]], i32 1
; CHECK-NEXT:    [[TMP4:%.*]] = extractelement <4 x float> [[TMP1]], i32 2
; CHECK-NEXT:    [[R2:%.*]] = insertelement <4 x float> [[R1]], float [[TMP4]], i32 2
; CHECK-NEXT:    [[TMP5:%.*]] = extractelement <4 x float> [[TMP1]], i32 3
; CHECK-NEXT:    [[R3:%.*]] = insertelement <4 x float> [[R2]], float [[TMP5]], i32 3
; CHECK-NEXT:    ret <4 x float> [[R3]]
;
  %a0 = extractelement <4 x float> %a, i32 0
  %a1 = extractelement <4 x float> %a, i32 1
  %a2 = extractelement <4 x float> %a, i32 2
  %a3 = extractelement <4 x float> %a, i32 3
  %b0 = extractelement <4 x float> %b, i32 0
  %b1 = extractelement <4 x float> %b, i32 1
  %b2 = extractelement <4 x float> %b, i32 2
  %b3 = extractelement <4 x float> %b, i32 3
  %c0 = fsub float %a0, %b0
  %c1 = fsub float %a1, %b1
  %c2 = fsub float %a2, %b2
  %c3 = fsub float %a3, %b3
  %r0 = insertelement <4 x float> undef, float %c0, i32 0
  %r1 = insertelement <4 x float> %r0,   float %c1, i32 1
  %r2 = insertelement <4 x float> %r1,   float %c2, i32 2
  %r3 = insertelement <4 x float> %r2,   float %c3, i32 3
  ret <4 x float> %r3
}

define <4 x float> @buildvector_mul_4f32(<4 x float> %a, <4 x float> %b) {
; CHECK-LABEL: @buildvector_mul_4f32(
; CHECK-NEXT:    [[TMP1:%.*]] = fmul <4 x float> %a, %b
; CHECK-NEXT:    [[TMP2:%.*]] = extractelement <4 x float> [[TMP1]], i32 0
; CHECK-NEXT:    [[R0:%.*]] = insertelement <4 x float> undef, float [[TMP2]], i32 0
; CHECK-NEXT:    [[TMP3:%.*]] = extractelement <4 x float> [[TMP1]], i32 1
; CHECK-NEXT:    [[R1:%.*]] = insertelement <4 x float> [[R0]], float [[TMP3]], i32 1
; CHECK-NEXT:    [[TMP4:%.*]] = extractelement <4 x float> [[TMP1]], i32 2
; CHECK-NEXT:    [[R2:%.*]] = insertelement <4 x float> [[R1]], float [[TMP4]], i32 2
; CHECK-NEXT:    [[TMP5:%.*]] = extractelement <4 x float> [[TMP1]], i32 3
; CHECK-NEXT:    [[R3:%.*]] = insertelement <4 x float> [[R2]], float [[TMP5]], i32 3
; CHECK-NEXT:    ret <4 x float> [[R3]]
;
  %a0 = extractelement <4 x float> %a, i32 0
  %a1 = extractelement <4 x float> %a, i32 1
  %a2 = extractelement <4 x float> %a, i32 2
  %a3 = extractelement <4 x float> %a, i32 3
  %b0 = extractelement <4 x float> %b, i32 0
  %b1 = extractelement <4 x float> %b, i32 1
  %b2 = extractelement <4 x float> %b, i32 2
  %b3 = extractelement <4 x float> %b, i32 3
  %c0 = fmul float %a0, %b0
  %c1 = fmul float %a1, %b1
  %c2 = fmul float %a2, %b2
  %c3 = fmul float %a3, %b3
  %r0 = insertelement <4 x float> undef, float %c0, i32 0
  %r1 = insertelement <4 x float> %r0,   float %c1, i32 1
  %r2 = insertelement <4 x float> %r1,   float %c2, i32 2
  %r3 = insertelement <4 x float> %r2,   float %c3, i32 3
  ret <4 x float> %r3
}

define <4 x float> @buildvector_div_4f32(<4 x float> %a, <4 x float> %b) {
; CHECK-LABEL: @buildvector_div_4f32(
; CHECK-NEXT:    [[TMP1:%.*]] = fdiv <4 x float> %a, %b
; CHECK-NEXT:    [[TMP2:%.*]] = extractelement <4 x float> [[TMP1]], i32 0
; CHECK-NEXT:    [[R0:%.*]] = insertelement <4 x float> undef, float [[TMP2]], i32 0
; CHECK-NEXT:    [[TMP3:%.*]] = extractelement <4 x float> [[TMP1]], i32 1
; CHECK-NEXT:    [[R1:%.*]] = insertelement <4 x float> [[R0]], float [[TMP3]], i32 1
; CHECK-NEXT:    [[TMP4:%.*]] = extractelement <4 x float> [[TMP1]], i32 2
; CHECK-NEXT:    [[R2:%.*]] = insertelement <4 x float> [[R1]], float [[TMP4]], i32 2
; CHECK-NEXT:    [[TMP5:%.*]] = extractelement <4 x float> [[TMP1]], i32 3
; CHECK-NEXT:    [[R3:%.*]] = insertelement <4 x float> [[R2]], float [[TMP5]], i32 3
; CHECK-NEXT:    ret <4 x float> [[R3]]
;
  %a0 = extractelement <4 x float> %a, i32 0
  %a1 = extractelement <4 x float> %a, i32 1
  %a2 = extractelement <4 x float> %a, i32 2
  %a3 = extractelement <4 x float> %a, i32 3
  %b0 = extractelement <4 x float> %b, i32 0
  %b1 = extractelement <4 x float> %b, i32 1
  %b2 = extractelement <4 x float> %b, i32 2
  %b3 = extractelement <4 x float> %b, i32 3
  %c0 = fdiv float %a0, %b0
  %c1 = fdiv float %a1, %b1
  %c2 = fdiv float %a2, %b2
  %c3 = fdiv float %a3, %b3
  %r0 = insertelement <4 x float> undef, float %c0, i32 0
  %r1 = insertelement <4 x float> %r0,   float %c1, i32 1
  %r2 = insertelement <4 x float> %r1,   float %c2, i32 2
  %r3 = insertelement <4 x float> %r2,   float %c3, i32 3
  ret <4 x float> %r3
}

;
; 256-bit Vectors
;

define <4 x double> @buildvector_add_4f64(<4 x double> %a, <4 x double> %b) {
; CHECK-LABEL: @buildvector_add_4f64(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <4 x double> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <4 x double> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <4 x double> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <4 x double> %a, i32 3
; CHECK-NEXT:    [[B0:%.*]] = extractelement <4 x double> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <4 x double> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <4 x double> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <4 x double> %b, i32 3
; CHECK-NEXT:    [[C0:%.*]] = fadd double [[A0]], [[B0]]
; CHECK-NEXT:    [[C1:%.*]] = fadd double [[A1]], [[B1]]
; CHECK-NEXT:    [[C2:%.*]] = fadd double [[A2]], [[B2]]
; CHECK-NEXT:    [[C3:%.*]] = fadd double [[A3]], [[B3]]
; CHECK-NEXT:    [[R0:%.*]] = insertelement <4 x double> undef, double [[C0]], i32 0
; CHECK-NEXT:    [[R1:%.*]] = insertelement <4 x double> [[R0]], double [[C1]], i32 1
; CHECK-NEXT:    [[R2:%.*]] = insertelement <4 x double> [[R1]], double [[C2]], i32 2
; CHECK-NEXT:    [[R3:%.*]] = insertelement <4 x double> [[R2]], double [[C3]], i32 3
; CHECK-NEXT:    ret <4 x double> [[R3]]
;
  %a0 = extractelement <4 x double> %a, i32 0
  %a1 = extractelement <4 x double> %a, i32 1
  %a2 = extractelement <4 x double> %a, i32 2
  %a3 = extractelement <4 x double> %a, i32 3
  %b0 = extractelement <4 x double> %b, i32 0
  %b1 = extractelement <4 x double> %b, i32 1
  %b2 = extractelement <4 x double> %b, i32 2
  %b3 = extractelement <4 x double> %b, i32 3
  %c0 = fadd double %a0, %b0
  %c1 = fadd double %a1, %b1
  %c2 = fadd double %a2, %b2
  %c3 = fadd double %a3, %b3
  %r0 = insertelement <4 x double> undef, double %c0, i32 0
  %r1 = insertelement <4 x double> %r0,   double %c1, i32 1
  %r2 = insertelement <4 x double> %r1,   double %c2, i32 2
  %r3 = insertelement <4 x double> %r2,   double %c3, i32 3
  ret <4 x double> %r3
}

define <4 x double> @buildvector_sub_4f64(<4 x double> %a, <4 x double> %b) {
; CHECK-LABEL: @buildvector_sub_4f64(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <4 x double> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <4 x double> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <4 x double> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <4 x double> %a, i32 3
; CHECK-NEXT:    [[B0:%.*]] = extractelement <4 x double> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <4 x double> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <4 x double> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <4 x double> %b, i32 3
; CHECK-NEXT:    [[C0:%.*]] = fsub double [[A0]], [[B0]]
; CHECK-NEXT:    [[C1:%.*]] = fsub double [[A1]], [[B1]]
; CHECK-NEXT:    [[C2:%.*]] = fsub double [[A2]], [[B2]]
; CHECK-NEXT:    [[C3:%.*]] = fsub double [[A3]], [[B3]]
; CHECK-NEXT:    [[R0:%.*]] = insertelement <4 x double> undef, double [[C0]], i32 0
; CHECK-NEXT:    [[R1:%.*]] = insertelement <4 x double> [[R0]], double [[C1]], i32 1
; CHECK-NEXT:    [[R2:%.*]] = insertelement <4 x double> [[R1]], double [[C2]], i32 2
; CHECK-NEXT:    [[R3:%.*]] = insertelement <4 x double> [[R2]], double [[C3]], i32 3
; CHECK-NEXT:    ret <4 x double> [[R3]]
;
  %a0 = extractelement <4 x double> %a, i32 0
  %a1 = extractelement <4 x double> %a, i32 1
  %a2 = extractelement <4 x double> %a, i32 2
  %a3 = extractelement <4 x double> %a, i32 3
  %b0 = extractelement <4 x double> %b, i32 0
  %b1 = extractelement <4 x double> %b, i32 1
  %b2 = extractelement <4 x double> %b, i32 2
  %b3 = extractelement <4 x double> %b, i32 3
  %c0 = fsub double %a0, %b0
  %c1 = fsub double %a1, %b1
  %c2 = fsub double %a2, %b2
  %c3 = fsub double %a3, %b3
  %r0 = insertelement <4 x double> undef, double %c0, i32 0
  %r1 = insertelement <4 x double> %r0,   double %c1, i32 1
  %r2 = insertelement <4 x double> %r1,   double %c2, i32 2
  %r3 = insertelement <4 x double> %r2,   double %c3, i32 3
  ret <4 x double> %r3
}

define <4 x double> @buildvector_mul_4f64(<4 x double> %a, <4 x double> %b) {
; CHECK-LABEL: @buildvector_mul_4f64(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <4 x double> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <4 x double> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <4 x double> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <4 x double> %a, i32 3
; CHECK-NEXT:    [[B0:%.*]] = extractelement <4 x double> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <4 x double> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <4 x double> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <4 x double> %b, i32 3
; CHECK-NEXT:    [[C0:%.*]] = fmul double [[A0]], [[B0]]
; CHECK-NEXT:    [[C1:%.*]] = fmul double [[A1]], [[B1]]
; CHECK-NEXT:    [[C2:%.*]] = fmul double [[A2]], [[B2]]
; CHECK-NEXT:    [[C3:%.*]] = fmul double [[A3]], [[B3]]
; CHECK-NEXT:    [[R0:%.*]] = insertelement <4 x double> undef, double [[C0]], i32 0
; CHECK-NEXT:    [[R1:%.*]] = insertelement <4 x double> [[R0]], double [[C1]], i32 1
; CHECK-NEXT:    [[R2:%.*]] = insertelement <4 x double> [[R1]], double [[C2]], i32 2
; CHECK-NEXT:    [[R3:%.*]] = insertelement <4 x double> [[R2]], double [[C3]], i32 3
; CHECK-NEXT:    ret <4 x double> [[R3]]
;
  %a0 = extractelement <4 x double> %a, i32 0
  %a1 = extractelement <4 x double> %a, i32 1
  %a2 = extractelement <4 x double> %a, i32 2
  %a3 = extractelement <4 x double> %a, i32 3
  %b0 = extractelement <4 x double> %b, i32 0
  %b1 = extractelement <4 x double> %b, i32 1
  %b2 = extractelement <4 x double> %b, i32 2
  %b3 = extractelement <4 x double> %b, i32 3
  %c0 = fmul double %a0, %b0
  %c1 = fmul double %a1, %b1
  %c2 = fmul double %a2, %b2
  %c3 = fmul double %a3, %b3
  %r0 = insertelement <4 x double> undef, double %c0, i32 0
  %r1 = insertelement <4 x double> %r0,   double %c1, i32 1
  %r2 = insertelement <4 x double> %r1,   double %c2, i32 2
  %r3 = insertelement <4 x double> %r2,   double %c3, i32 3
  ret <4 x double> %r3
}

define <4 x double> @buildvector_div_4f64(<4 x double> %a, <4 x double> %b) {
; CHECK-LABEL: @buildvector_div_4f64(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <4 x double> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <4 x double> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <4 x double> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <4 x double> %a, i32 3
; CHECK-NEXT:    [[B0:%.*]] = extractelement <4 x double> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <4 x double> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <4 x double> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <4 x double> %b, i32 3
; CHECK-NEXT:    [[TMP1:%.*]] = insertelement <2 x double> undef, double [[A0]], i32 0
; CHECK-NEXT:    [[TMP2:%.*]] = insertelement <2 x double> [[TMP1]], double [[A1]], i32 1
; CHECK-NEXT:    [[TMP3:%.*]] = insertelement <2 x double> undef, double [[B0]], i32 0
; CHECK-NEXT:    [[TMP4:%.*]] = insertelement <2 x double> [[TMP3]], double [[B1]], i32 1
; CHECK-NEXT:    [[TMP5:%.*]] = fdiv <2 x double> [[TMP2]], [[TMP4]]
; CHECK-NEXT:    [[TMP6:%.*]] = insertelement <2 x double> undef, double [[A2]], i32 0
; CHECK-NEXT:    [[TMP7:%.*]] = insertelement <2 x double> [[TMP6]], double [[A3]], i32 1
; CHECK-NEXT:    [[TMP8:%.*]] = insertelement <2 x double> undef, double [[B2]], i32 0
; CHECK-NEXT:    [[TMP9:%.*]] = insertelement <2 x double> [[TMP8]], double [[B3]], i32 1
; CHECK-NEXT:    [[TMP10:%.*]] = fdiv <2 x double> [[TMP7]], [[TMP9]]
; CHECK-NEXT:    [[TMP11:%.*]] = extractelement <2 x double> [[TMP5]], i32 0
; CHECK-NEXT:    [[R0:%.*]] = insertelement <4 x double> undef, double [[TMP11]], i32 0
; CHECK-NEXT:    [[TMP12:%.*]] = extractelement <2 x double> [[TMP5]], i32 1
; CHECK-NEXT:    [[R1:%.*]] = insertelement <4 x double> [[R0]], double [[TMP12]], i32 1
; CHECK-NEXT:    [[TMP13:%.*]] = extractelement <2 x double> [[TMP10]], i32 0
; CHECK-NEXT:    [[R2:%.*]] = insertelement <4 x double> [[R1]], double [[TMP13]], i32 2
; CHECK-NEXT:    [[TMP14:%.*]] = extractelement <2 x double> [[TMP10]], i32 1
; CHECK-NEXT:    [[R3:%.*]] = insertelement <4 x double> [[R2]], double [[TMP14]], i32 3
; CHECK-NEXT:    ret <4 x double> [[R3]]
;
  %a0 = extractelement <4 x double> %a, i32 0
  %a1 = extractelement <4 x double> %a, i32 1
  %a2 = extractelement <4 x double> %a, i32 2
  %a3 = extractelement <4 x double> %a, i32 3
  %b0 = extractelement <4 x double> %b, i32 0
  %b1 = extractelement <4 x double> %b, i32 1
  %b2 = extractelement <4 x double> %b, i32 2
  %b3 = extractelement <4 x double> %b, i32 3
  %c0 = fdiv double %a0, %b0
  %c1 = fdiv double %a1, %b1
  %c2 = fdiv double %a2, %b2
  %c3 = fdiv double %a3, %b3
  %r0 = insertelement <4 x double> undef, double %c0, i32 0
  %r1 = insertelement <4 x double> %r0,   double %c1, i32 1
  %r2 = insertelement <4 x double> %r1,   double %c2, i32 2
  %r3 = insertelement <4 x double> %r2,   double %c3, i32 3
  ret <4 x double> %r3
}

define <8 x float> @buildvector_add_8f32(<8 x float> %a, <8 x float> %b) {
; CHECK-LABEL: @buildvector_add_8f32(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <8 x float> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <8 x float> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <8 x float> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <8 x float> %a, i32 3
; CHECK-NEXT:    [[A4:%.*]] = extractelement <8 x float> %a, i32 4
; CHECK-NEXT:    [[A5:%.*]] = extractelement <8 x float> %a, i32 5
; CHECK-NEXT:    [[A6:%.*]] = extractelement <8 x float> %a, i32 6
; CHECK-NEXT:    [[A7:%.*]] = extractelement <8 x float> %a, i32 7
; CHECK-NEXT:    [[B0:%.*]] = extractelement <8 x float> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <8 x float> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <8 x float> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <8 x float> %b, i32 3
; CHECK-NEXT:    [[B4:%.*]] = extractelement <8 x float> %b, i32 4
; CHECK-NEXT:    [[B5:%.*]] = extractelement <8 x float> %b, i32 5
; CHECK-NEXT:    [[B6:%.*]] = extractelement <8 x float> %b, i32 6
; CHECK-NEXT:    [[B7:%.*]] = extractelement <8 x float> %b, i32 7
; CHECK-NEXT:    [[C0:%.*]] = fadd float [[A0]], [[B0]]
; CHECK-NEXT:    [[C1:%.*]] = fadd float [[A1]], [[B1]]
; CHECK-NEXT:    [[C2:%.*]] = fadd float [[A2]], [[B2]]
; CHECK-NEXT:    [[C3:%.*]] = fadd float [[A3]], [[B3]]
; CHECK-NEXT:    [[C4:%.*]] = fadd float [[A4]], [[B4]]
; CHECK-NEXT:    [[C5:%.*]] = fadd float [[A5]], [[B5]]
; CHECK-NEXT:    [[C6:%.*]] = fadd float [[A6]], [[B6]]
; CHECK-NEXT:    [[C7:%.*]] = fadd float [[A7]], [[B7]]
; CHECK-NEXT:    [[R0:%.*]] = insertelement <8 x float> undef, float [[C0]], i32 0
; CHECK-NEXT:    [[R1:%.*]] = insertelement <8 x float> [[R0]], float [[C1]], i32 1
; CHECK-NEXT:    [[R2:%.*]] = insertelement <8 x float> [[R1]], float [[C2]], i32 2
; CHECK-NEXT:    [[R3:%.*]] = insertelement <8 x float> [[R2]], float [[C3]], i32 3
; CHECK-NEXT:    [[R4:%.*]] = insertelement <8 x float> [[R3]], float [[C4]], i32 4
; CHECK-NEXT:    [[R5:%.*]] = insertelement <8 x float> [[R4]], float [[C5]], i32 5
; CHECK-NEXT:    [[R6:%.*]] = insertelement <8 x float> [[R5]], float [[C6]], i32 6
; CHECK-NEXT:    [[R7:%.*]] = insertelement <8 x float> [[R6]], float [[C7]], i32 7
; CHECK-NEXT:    ret <8 x float> [[R7]]
;
  %a0 = extractelement <8 x float> %a, i32 0
  %a1 = extractelement <8 x float> %a, i32 1
  %a2 = extractelement <8 x float> %a, i32 2
  %a3 = extractelement <8 x float> %a, i32 3
  %a4 = extractelement <8 x float> %a, i32 4
  %a5 = extractelement <8 x float> %a, i32 5
  %a6 = extractelement <8 x float> %a, i32 6
  %a7 = extractelement <8 x float> %a, i32 7
  %b0 = extractelement <8 x float> %b, i32 0
  %b1 = extractelement <8 x float> %b, i32 1
  %b2 = extractelement <8 x float> %b, i32 2
  %b3 = extractelement <8 x float> %b, i32 3
  %b4 = extractelement <8 x float> %b, i32 4
  %b5 = extractelement <8 x float> %b, i32 5
  %b6 = extractelement <8 x float> %b, i32 6
  %b7 = extractelement <8 x float> %b, i32 7
  %c0 = fadd float %a0, %b0
  %c1 = fadd float %a1, %b1
  %c2 = fadd float %a2, %b2
  %c3 = fadd float %a3, %b3
  %c4 = fadd float %a4, %b4
  %c5 = fadd float %a5, %b5
  %c6 = fadd float %a6, %b6
  %c7 = fadd float %a7, %b7
  %r0 = insertelement <8 x float> undef, float %c0, i32 0
  %r1 = insertelement <8 x float> %r0,   float %c1, i32 1
  %r2 = insertelement <8 x float> %r1,   float %c2, i32 2
  %r3 = insertelement <8 x float> %r2,   float %c3, i32 3
  %r4 = insertelement <8 x float> %r3,   float %c4, i32 4
  %r5 = insertelement <8 x float> %r4,   float %c5, i32 5
  %r6 = insertelement <8 x float> %r5,   float %c6, i32 6
  %r7 = insertelement <8 x float> %r6,   float %c7, i32 7
  ret <8 x float> %r7
}

define <8 x float> @buildvector_sub_8f32(<8 x float> %a, <8 x float> %b) {
; CHECK-LABEL: @buildvector_sub_8f32(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <8 x float> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <8 x float> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <8 x float> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <8 x float> %a, i32 3
; CHECK-NEXT:    [[A4:%.*]] = extractelement <8 x float> %a, i32 4
; CHECK-NEXT:    [[A5:%.*]] = extractelement <8 x float> %a, i32 5
; CHECK-NEXT:    [[A6:%.*]] = extractelement <8 x float> %a, i32 6
; CHECK-NEXT:    [[A7:%.*]] = extractelement <8 x float> %a, i32 7
; CHECK-NEXT:    [[B0:%.*]] = extractelement <8 x float> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <8 x float> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <8 x float> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <8 x float> %b, i32 3
; CHECK-NEXT:    [[B4:%.*]] = extractelement <8 x float> %b, i32 4
; CHECK-NEXT:    [[B5:%.*]] = extractelement <8 x float> %b, i32 5
; CHECK-NEXT:    [[B6:%.*]] = extractelement <8 x float> %b, i32 6
; CHECK-NEXT:    [[B7:%.*]] = extractelement <8 x float> %b, i32 7
; CHECK-NEXT:    [[C0:%.*]] = fsub float [[A0]], [[B0]]
; CHECK-NEXT:    [[C1:%.*]] = fsub float [[A1]], [[B1]]
; CHECK-NEXT:    [[C2:%.*]] = fsub float [[A2]], [[B2]]
; CHECK-NEXT:    [[C3:%.*]] = fsub float [[A3]], [[B3]]
; CHECK-NEXT:    [[C4:%.*]] = fsub float [[A4]], [[B4]]
; CHECK-NEXT:    [[C5:%.*]] = fsub float [[A5]], [[B5]]
; CHECK-NEXT:    [[C6:%.*]] = fsub float [[A6]], [[B6]]
; CHECK-NEXT:    [[C7:%.*]] = fsub float [[A7]], [[B7]]
; CHECK-NEXT:    [[R0:%.*]] = insertelement <8 x float> undef, float [[C0]], i32 0
; CHECK-NEXT:    [[R1:%.*]] = insertelement <8 x float> [[R0]], float [[C1]], i32 1
; CHECK-NEXT:    [[R2:%.*]] = insertelement <8 x float> [[R1]], float [[C2]], i32 2
; CHECK-NEXT:    [[R3:%.*]] = insertelement <8 x float> [[R2]], float [[C3]], i32 3
; CHECK-NEXT:    [[R4:%.*]] = insertelement <8 x float> [[R3]], float [[C4]], i32 4
; CHECK-NEXT:    [[R5:%.*]] = insertelement <8 x float> [[R4]], float [[C5]], i32 5
; CHECK-NEXT:    [[R6:%.*]] = insertelement <8 x float> [[R5]], float [[C6]], i32 6
; CHECK-NEXT:    [[R7:%.*]] = insertelement <8 x float> [[R6]], float [[C7]], i32 7
; CHECK-NEXT:    ret <8 x float> [[R7]]
;
  %a0 = extractelement <8 x float> %a, i32 0
  %a1 = extractelement <8 x float> %a, i32 1
  %a2 = extractelement <8 x float> %a, i32 2
  %a3 = extractelement <8 x float> %a, i32 3
  %a4 = extractelement <8 x float> %a, i32 4
  %a5 = extractelement <8 x float> %a, i32 5
  %a6 = extractelement <8 x float> %a, i32 6
  %a7 = extractelement <8 x float> %a, i32 7
  %b0 = extractelement <8 x float> %b, i32 0
  %b1 = extractelement <8 x float> %b, i32 1
  %b2 = extractelement <8 x float> %b, i32 2
  %b3 = extractelement <8 x float> %b, i32 3
  %b4 = extractelement <8 x float> %b, i32 4
  %b5 = extractelement <8 x float> %b, i32 5
  %b6 = extractelement <8 x float> %b, i32 6
  %b7 = extractelement <8 x float> %b, i32 7
  %c0 = fsub float %a0, %b0
  %c1 = fsub float %a1, %b1
  %c2 = fsub float %a2, %b2
  %c3 = fsub float %a3, %b3
  %c4 = fsub float %a4, %b4
  %c5 = fsub float %a5, %b5
  %c6 = fsub float %a6, %b6
  %c7 = fsub float %a7, %b7
  %r0 = insertelement <8 x float> undef, float %c0, i32 0
  %r1 = insertelement <8 x float> %r0,   float %c1, i32 1
  %r2 = insertelement <8 x float> %r1,   float %c2, i32 2
  %r3 = insertelement <8 x float> %r2,   float %c3, i32 3
  %r4 = insertelement <8 x float> %r3,   float %c4, i32 4
  %r5 = insertelement <8 x float> %r4,   float %c5, i32 5
  %r6 = insertelement <8 x float> %r5,   float %c6, i32 6
  %r7 = insertelement <8 x float> %r6,   float %c7, i32 7
  ret <8 x float> %r7
}

define <8 x float> @buildvector_mul_8f32(<8 x float> %a, <8 x float> %b) {
; CHECK-LABEL: @buildvector_mul_8f32(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <8 x float> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <8 x float> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <8 x float> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <8 x float> %a, i32 3
; CHECK-NEXT:    [[A4:%.*]] = extractelement <8 x float> %a, i32 4
; CHECK-NEXT:    [[A5:%.*]] = extractelement <8 x float> %a, i32 5
; CHECK-NEXT:    [[A6:%.*]] = extractelement <8 x float> %a, i32 6
; CHECK-NEXT:    [[A7:%.*]] = extractelement <8 x float> %a, i32 7
; CHECK-NEXT:    [[B0:%.*]] = extractelement <8 x float> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <8 x float> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <8 x float> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <8 x float> %b, i32 3
; CHECK-NEXT:    [[B4:%.*]] = extractelement <8 x float> %b, i32 4
; CHECK-NEXT:    [[B5:%.*]] = extractelement <8 x float> %b, i32 5
; CHECK-NEXT:    [[B6:%.*]] = extractelement <8 x float> %b, i32 6
; CHECK-NEXT:    [[B7:%.*]] = extractelement <8 x float> %b, i32 7
; CHECK-NEXT:    [[C0:%.*]] = fmul float [[A0]], [[B0]]
; CHECK-NEXT:    [[C1:%.*]] = fmul float [[A1]], [[B1]]
; CHECK-NEXT:    [[C2:%.*]] = fmul float [[A2]], [[B2]]
; CHECK-NEXT:    [[C3:%.*]] = fmul float [[A3]], [[B3]]
; CHECK-NEXT:    [[C4:%.*]] = fmul float [[A4]], [[B4]]
; CHECK-NEXT:    [[C5:%.*]] = fmul float [[A5]], [[B5]]
; CHECK-NEXT:    [[C6:%.*]] = fmul float [[A6]], [[B6]]
; CHECK-NEXT:    [[C7:%.*]] = fmul float [[A7]], [[B7]]
; CHECK-NEXT:    [[R0:%.*]] = insertelement <8 x float> undef, float [[C0]], i32 0
; CHECK-NEXT:    [[R1:%.*]] = insertelement <8 x float> [[R0]], float [[C1]], i32 1
; CHECK-NEXT:    [[R2:%.*]] = insertelement <8 x float> [[R1]], float [[C2]], i32 2
; CHECK-NEXT:    [[R3:%.*]] = insertelement <8 x float> [[R2]], float [[C3]], i32 3
; CHECK-NEXT:    [[R4:%.*]] = insertelement <8 x float> [[R3]], float [[C4]], i32 4
; CHECK-NEXT:    [[R5:%.*]] = insertelement <8 x float> [[R4]], float [[C5]], i32 5
; CHECK-NEXT:    [[R6:%.*]] = insertelement <8 x float> [[R5]], float [[C6]], i32 6
; CHECK-NEXT:    [[R7:%.*]] = insertelement <8 x float> [[R6]], float [[C7]], i32 7
; CHECK-NEXT:    ret <8 x float> [[R7]]
;
  %a0 = extractelement <8 x float> %a, i32 0
  %a1 = extractelement <8 x float> %a, i32 1
  %a2 = extractelement <8 x float> %a, i32 2
  %a3 = extractelement <8 x float> %a, i32 3
  %a4 = extractelement <8 x float> %a, i32 4
  %a5 = extractelement <8 x float> %a, i32 5
  %a6 = extractelement <8 x float> %a, i32 6
  %a7 = extractelement <8 x float> %a, i32 7
  %b0 = extractelement <8 x float> %b, i32 0
  %b1 = extractelement <8 x float> %b, i32 1
  %b2 = extractelement <8 x float> %b, i32 2
  %b3 = extractelement <8 x float> %b, i32 3
  %b4 = extractelement <8 x float> %b, i32 4
  %b5 = extractelement <8 x float> %b, i32 5
  %b6 = extractelement <8 x float> %b, i32 6
  %b7 = extractelement <8 x float> %b, i32 7
  %c0 = fmul float %a0, %b0
  %c1 = fmul float %a1, %b1
  %c2 = fmul float %a2, %b2
  %c3 = fmul float %a3, %b3
  %c4 = fmul float %a4, %b4
  %c5 = fmul float %a5, %b5
  %c6 = fmul float %a6, %b6
  %c7 = fmul float %a7, %b7
  %r0 = insertelement <8 x float> undef, float %c0, i32 0
  %r1 = insertelement <8 x float> %r0,   float %c1, i32 1
  %r2 = insertelement <8 x float> %r1,   float %c2, i32 2
  %r3 = insertelement <8 x float> %r2,   float %c3, i32 3
  %r4 = insertelement <8 x float> %r3,   float %c4, i32 4
  %r5 = insertelement <8 x float> %r4,   float %c5, i32 5
  %r6 = insertelement <8 x float> %r5,   float %c6, i32 6
  %r7 = insertelement <8 x float> %r6,   float %c7, i32 7
  ret <8 x float> %r7
}

define <8 x float> @buildvector_div_8f32(<8 x float> %a, <8 x float> %b) {
; CHECK-LABEL: @buildvector_div_8f32(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <8 x float> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <8 x float> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <8 x float> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <8 x float> %a, i32 3
; CHECK-NEXT:    [[A4:%.*]] = extractelement <8 x float> %a, i32 4
; CHECK-NEXT:    [[A5:%.*]] = extractelement <8 x float> %a, i32 5
; CHECK-NEXT:    [[A6:%.*]] = extractelement <8 x float> %a, i32 6
; CHECK-NEXT:    [[A7:%.*]] = extractelement <8 x float> %a, i32 7
; CHECK-NEXT:    [[B0:%.*]] = extractelement <8 x float> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <8 x float> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <8 x float> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <8 x float> %b, i32 3
; CHECK-NEXT:    [[B4:%.*]] = extractelement <8 x float> %b, i32 4
; CHECK-NEXT:    [[B5:%.*]] = extractelement <8 x float> %b, i32 5
; CHECK-NEXT:    [[B6:%.*]] = extractelement <8 x float> %b, i32 6
; CHECK-NEXT:    [[B7:%.*]] = extractelement <8 x float> %b, i32 7
; CHECK-NEXT:    [[TMP1:%.*]] = insertelement <4 x float> undef, float [[A0]], i32 0
; CHECK-NEXT:    [[TMP2:%.*]] = insertelement <4 x float> [[TMP1]], float [[A1]], i32 1
; CHECK-NEXT:    [[TMP3:%.*]] = insertelement <4 x float> [[TMP2]], float [[A2]], i32 2
; CHECK-NEXT:    [[TMP4:%.*]] = insertelement <4 x float> [[TMP3]], float [[A3]], i32 3
; CHECK-NEXT:    [[TMP5:%.*]] = insertelement <4 x float> undef, float [[B0]], i32 0
; CHECK-NEXT:    [[TMP6:%.*]] = insertelement <4 x float> [[TMP5]], float [[B1]], i32 1
; CHECK-NEXT:    [[TMP7:%.*]] = insertelement <4 x float> [[TMP6]], float [[B2]], i32 2
; CHECK-NEXT:    [[TMP8:%.*]] = insertelement <4 x float> [[TMP7]], float [[B3]], i32 3
; CHECK-NEXT:    [[TMP9:%.*]] = fdiv <4 x float> [[TMP4]], [[TMP8]]
; CHECK-NEXT:    [[TMP10:%.*]] = insertelement <4 x float> undef, float [[A4]], i32 0
; CHECK-NEXT:    [[TMP11:%.*]] = insertelement <4 x float> [[TMP10]], float [[A5]], i32 1
; CHECK-NEXT:    [[TMP12:%.*]] = insertelement <4 x float> [[TMP11]], float [[A6]], i32 2
; CHECK-NEXT:    [[TMP13:%.*]] = insertelement <4 x float> [[TMP12]], float [[A7]], i32 3
; CHECK-NEXT:    [[TMP14:%.*]] = insertelement <4 x float> undef, float [[B4]], i32 0
; CHECK-NEXT:    [[TMP15:%.*]] = insertelement <4 x float> [[TMP14]], float [[B5]], i32 1
; CHECK-NEXT:    [[TMP16:%.*]] = insertelement <4 x float> [[TMP15]], float [[B6]], i32 2
; CHECK-NEXT:    [[TMP17:%.*]] = insertelement <4 x float> [[TMP16]], float [[B7]], i32 3
; CHECK-NEXT:    [[TMP18:%.*]] = fdiv <4 x float> [[TMP13]], [[TMP17]]
; CHECK-NEXT:    [[TMP19:%.*]] = extractelement <4 x float> [[TMP9]], i32 0
; CHECK-NEXT:    [[R0:%.*]] = insertelement <8 x float> undef, float [[TMP19]], i32 0
; CHECK-NEXT:    [[TMP20:%.*]] = extractelement <4 x float> [[TMP9]], i32 1
; CHECK-NEXT:    [[R1:%.*]] = insertelement <8 x float> [[R0]], float [[TMP20]], i32 1
; CHECK-NEXT:    [[TMP21:%.*]] = extractelement <4 x float> [[TMP9]], i32 2
; CHECK-NEXT:    [[R2:%.*]] = insertelement <8 x float> [[R1]], float [[TMP21]], i32 2
; CHECK-NEXT:    [[TMP22:%.*]] = extractelement <4 x float> [[TMP9]], i32 3
; CHECK-NEXT:    [[R3:%.*]] = insertelement <8 x float> [[R2]], float [[TMP22]], i32 3
; CHECK-NEXT:    [[TMP23:%.*]] = extractelement <4 x float> [[TMP18]], i32 0
; CHECK-NEXT:    [[R4:%.*]] = insertelement <8 x float> [[R3]], float [[TMP23]], i32 4
; CHECK-NEXT:    [[TMP24:%.*]] = extractelement <4 x float> [[TMP18]], i32 1
; CHECK-NEXT:    [[R5:%.*]] = insertelement <8 x float> [[R4]], float [[TMP24]], i32 5
; CHECK-NEXT:    [[TMP25:%.*]] = extractelement <4 x float> [[TMP18]], i32 2
; CHECK-NEXT:    [[R6:%.*]] = insertelement <8 x float> [[R5]], float [[TMP25]], i32 6
; CHECK-NEXT:    [[TMP26:%.*]] = extractelement <4 x float> [[TMP18]], i32 3
; CHECK-NEXT:    [[R7:%.*]] = insertelement <8 x float> [[R6]], float [[TMP26]], i32 7
; CHECK-NEXT:    ret <8 x float> [[R7]]
;
  %a0 = extractelement <8 x float> %a, i32 0
  %a1 = extractelement <8 x float> %a, i32 1
  %a2 = extractelement <8 x float> %a, i32 2
  %a3 = extractelement <8 x float> %a, i32 3
  %a4 = extractelement <8 x float> %a, i32 4
  %a5 = extractelement <8 x float> %a, i32 5
  %a6 = extractelement <8 x float> %a, i32 6
  %a7 = extractelement <8 x float> %a, i32 7
  %b0 = extractelement <8 x float> %b, i32 0
  %b1 = extractelement <8 x float> %b, i32 1
  %b2 = extractelement <8 x float> %b, i32 2
  %b3 = extractelement <8 x float> %b, i32 3
  %b4 = extractelement <8 x float> %b, i32 4
  %b5 = extractelement <8 x float> %b, i32 5
  %b6 = extractelement <8 x float> %b, i32 6
  %b7 = extractelement <8 x float> %b, i32 7
  %c0 = fdiv float %a0, %b0
  %c1 = fdiv float %a1, %b1
  %c2 = fdiv float %a2, %b2
  %c3 = fdiv float %a3, %b3
  %c4 = fdiv float %a4, %b4
  %c5 = fdiv float %a5, %b5
  %c6 = fdiv float %a6, %b6
  %c7 = fdiv float %a7, %b7
  %r0 = insertelement <8 x float> undef, float %c0, i32 0
  %r1 = insertelement <8 x float> %r0,   float %c1, i32 1
  %r2 = insertelement <8 x float> %r1,   float %c2, i32 2
  %r3 = insertelement <8 x float> %r2,   float %c3, i32 3
  %r4 = insertelement <8 x float> %r3,   float %c4, i32 4
  %r5 = insertelement <8 x float> %r4,   float %c5, i32 5
  %r6 = insertelement <8 x float> %r5,   float %c6, i32 6
  %r7 = insertelement <8 x float> %r6,   float %c7, i32 7
  ret <8 x float> %r7
}

;
; 512-bit Vectors
;

define <8 x double> @buildvector_add_8f64(<8 x double> %a, <8 x double> %b) {
; CHECK-LABEL: @buildvector_add_8f64(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <8 x double> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <8 x double> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <8 x double> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <8 x double> %a, i32 3
; CHECK-NEXT:    [[A4:%.*]] = extractelement <8 x double> %a, i32 4
; CHECK-NEXT:    [[A5:%.*]] = extractelement <8 x double> %a, i32 5
; CHECK-NEXT:    [[A6:%.*]] = extractelement <8 x double> %a, i32 6
; CHECK-NEXT:    [[A7:%.*]] = extractelement <8 x double> %a, i32 7
; CHECK-NEXT:    [[B0:%.*]] = extractelement <8 x double> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <8 x double> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <8 x double> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <8 x double> %b, i32 3
; CHECK-NEXT:    [[B4:%.*]] = extractelement <8 x double> %b, i32 4
; CHECK-NEXT:    [[B5:%.*]] = extractelement <8 x double> %b, i32 5
; CHECK-NEXT:    [[B6:%.*]] = extractelement <8 x double> %b, i32 6
; CHECK-NEXT:    [[B7:%.*]] = extractelement <8 x double> %b, i32 7
; CHECK-NEXT:    [[C0:%.*]] = fadd double [[A0]], [[B0]]
; CHECK-NEXT:    [[C1:%.*]] = fadd double [[A1]], [[B1]]
; CHECK-NEXT:    [[C2:%.*]] = fadd double [[A2]], [[B2]]
; CHECK-NEXT:    [[C3:%.*]] = fadd double [[A3]], [[B3]]
; CHECK-NEXT:    [[C4:%.*]] = fadd double [[A4]], [[B4]]
; CHECK-NEXT:    [[C5:%.*]] = fadd double [[A5]], [[B5]]
; CHECK-NEXT:    [[C6:%.*]] = fadd double [[A6]], [[B6]]
; CHECK-NEXT:    [[C7:%.*]] = fadd double [[A7]], [[B7]]
; CHECK-NEXT:    [[R0:%.*]] = insertelement <8 x double> undef, double [[C0]], i32 0
; CHECK-NEXT:    [[R1:%.*]] = insertelement <8 x double> [[R0]], double [[C1]], i32 1
; CHECK-NEXT:    [[R2:%.*]] = insertelement <8 x double> [[R1]], double [[C2]], i32 2
; CHECK-NEXT:    [[R3:%.*]] = insertelement <8 x double> [[R2]], double [[C3]], i32 3
; CHECK-NEXT:    [[R4:%.*]] = insertelement <8 x double> [[R3]], double [[C4]], i32 4
; CHECK-NEXT:    [[R5:%.*]] = insertelement <8 x double> [[R4]], double [[C5]], i32 5
; CHECK-NEXT:    [[R6:%.*]] = insertelement <8 x double> [[R5]], double [[C6]], i32 6
; CHECK-NEXT:    [[R7:%.*]] = insertelement <8 x double> [[R6]], double [[C7]], i32 7
; CHECK-NEXT:    ret <8 x double> [[R7]]
;
  %a0 = extractelement <8 x double> %a, i32 0
  %a1 = extractelement <8 x double> %a, i32 1
  %a2 = extractelement <8 x double> %a, i32 2
  %a3 = extractelement <8 x double> %a, i32 3
  %a4 = extractelement <8 x double> %a, i32 4
  %a5 = extractelement <8 x double> %a, i32 5
  %a6 = extractelement <8 x double> %a, i32 6
  %a7 = extractelement <8 x double> %a, i32 7
  %b0 = extractelement <8 x double> %b, i32 0
  %b1 = extractelement <8 x double> %b, i32 1
  %b2 = extractelement <8 x double> %b, i32 2
  %b3 = extractelement <8 x double> %b, i32 3
  %b4 = extractelement <8 x double> %b, i32 4
  %b5 = extractelement <8 x double> %b, i32 5
  %b6 = extractelement <8 x double> %b, i32 6
  %b7 = extractelement <8 x double> %b, i32 7
  %c0 = fadd double %a0, %b0
  %c1 = fadd double %a1, %b1
  %c2 = fadd double %a2, %b2
  %c3 = fadd double %a3, %b3
  %c4 = fadd double %a4, %b4
  %c5 = fadd double %a5, %b5
  %c6 = fadd double %a6, %b6
  %c7 = fadd double %a7, %b7
  %r0 = insertelement <8 x double> undef, double %c0, i32 0
  %r1 = insertelement <8 x double> %r0,   double %c1, i32 1
  %r2 = insertelement <8 x double> %r1,   double %c2, i32 2
  %r3 = insertelement <8 x double> %r2,   double %c3, i32 3
  %r4 = insertelement <8 x double> %r3,   double %c4, i32 4
  %r5 = insertelement <8 x double> %r4,   double %c5, i32 5
  %r6 = insertelement <8 x double> %r5,   double %c6, i32 6
  %r7 = insertelement <8 x double> %r6,   double %c7, i32 7
  ret <8 x double> %r7
}

define <8 x double> @buildvector_sub_8f64(<8 x double> %a, <8 x double> %b) {
; CHECK-LABEL: @buildvector_sub_8f64(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <8 x double> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <8 x double> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <8 x double> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <8 x double> %a, i32 3
; CHECK-NEXT:    [[A4:%.*]] = extractelement <8 x double> %a, i32 4
; CHECK-NEXT:    [[A5:%.*]] = extractelement <8 x double> %a, i32 5
; CHECK-NEXT:    [[A6:%.*]] = extractelement <8 x double> %a, i32 6
; CHECK-NEXT:    [[A7:%.*]] = extractelement <8 x double> %a, i32 7
; CHECK-NEXT:    [[B0:%.*]] = extractelement <8 x double> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <8 x double> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <8 x double> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <8 x double> %b, i32 3
; CHECK-NEXT:    [[B4:%.*]] = extractelement <8 x double> %b, i32 4
; CHECK-NEXT:    [[B5:%.*]] = extractelement <8 x double> %b, i32 5
; CHECK-NEXT:    [[B6:%.*]] = extractelement <8 x double> %b, i32 6
; CHECK-NEXT:    [[B7:%.*]] = extractelement <8 x double> %b, i32 7
; CHECK-NEXT:    [[C0:%.*]] = fsub double [[A0]], [[B0]]
; CHECK-NEXT:    [[C1:%.*]] = fsub double [[A1]], [[B1]]
; CHECK-NEXT:    [[C2:%.*]] = fsub double [[A2]], [[B2]]
; CHECK-NEXT:    [[C3:%.*]] = fsub double [[A3]], [[B3]]
; CHECK-NEXT:    [[C4:%.*]] = fsub double [[A4]], [[B4]]
; CHECK-NEXT:    [[C5:%.*]] = fsub double [[A5]], [[B5]]
; CHECK-NEXT:    [[C6:%.*]] = fsub double [[A6]], [[B6]]
; CHECK-NEXT:    [[C7:%.*]] = fsub double [[A7]], [[B7]]
; CHECK-NEXT:    [[R0:%.*]] = insertelement <8 x double> undef, double [[C0]], i32 0
; CHECK-NEXT:    [[R1:%.*]] = insertelement <8 x double> [[R0]], double [[C1]], i32 1
; CHECK-NEXT:    [[R2:%.*]] = insertelement <8 x double> [[R1]], double [[C2]], i32 2
; CHECK-NEXT:    [[R3:%.*]] = insertelement <8 x double> [[R2]], double [[C3]], i32 3
; CHECK-NEXT:    [[R4:%.*]] = insertelement <8 x double> [[R3]], double [[C4]], i32 4
; CHECK-NEXT:    [[R5:%.*]] = insertelement <8 x double> [[R4]], double [[C5]], i32 5
; CHECK-NEXT:    [[R6:%.*]] = insertelement <8 x double> [[R5]], double [[C6]], i32 6
; CHECK-NEXT:    [[R7:%.*]] = insertelement <8 x double> [[R6]], double [[C7]], i32 7
; CHECK-NEXT:    ret <8 x double> [[R7]]
;
  %a0 = extractelement <8 x double> %a, i32 0
  %a1 = extractelement <8 x double> %a, i32 1
  %a2 = extractelement <8 x double> %a, i32 2
  %a3 = extractelement <8 x double> %a, i32 3
  %a4 = extractelement <8 x double> %a, i32 4
  %a5 = extractelement <8 x double> %a, i32 5
  %a6 = extractelement <8 x double> %a, i32 6
  %a7 = extractelement <8 x double> %a, i32 7
  %b0 = extractelement <8 x double> %b, i32 0
  %b1 = extractelement <8 x double> %b, i32 1
  %b2 = extractelement <8 x double> %b, i32 2
  %b3 = extractelement <8 x double> %b, i32 3
  %b4 = extractelement <8 x double> %b, i32 4
  %b5 = extractelement <8 x double> %b, i32 5
  %b6 = extractelement <8 x double> %b, i32 6
  %b7 = extractelement <8 x double> %b, i32 7
  %c0 = fsub double %a0, %b0
  %c1 = fsub double %a1, %b1
  %c2 = fsub double %a2, %b2
  %c3 = fsub double %a3, %b3
  %c4 = fsub double %a4, %b4
  %c5 = fsub double %a5, %b5
  %c6 = fsub double %a6, %b6
  %c7 = fsub double %a7, %b7
  %r0 = insertelement <8 x double> undef, double %c0, i32 0
  %r1 = insertelement <8 x double> %r0,   double %c1, i32 1
  %r2 = insertelement <8 x double> %r1,   double %c2, i32 2
  %r3 = insertelement <8 x double> %r2,   double %c3, i32 3
  %r4 = insertelement <8 x double> %r3,   double %c4, i32 4
  %r5 = insertelement <8 x double> %r4,   double %c5, i32 5
  %r6 = insertelement <8 x double> %r5,   double %c6, i32 6
  %r7 = insertelement <8 x double> %r6,   double %c7, i32 7
  ret <8 x double> %r7
}

define <8 x double> @buildvector_mul_8f64(<8 x double> %a, <8 x double> %b) {
; CHECK-LABEL: @buildvector_mul_8f64(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <8 x double> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <8 x double> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <8 x double> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <8 x double> %a, i32 3
; CHECK-NEXT:    [[A4:%.*]] = extractelement <8 x double> %a, i32 4
; CHECK-NEXT:    [[A5:%.*]] = extractelement <8 x double> %a, i32 5
; CHECK-NEXT:    [[A6:%.*]] = extractelement <8 x double> %a, i32 6
; CHECK-NEXT:    [[A7:%.*]] = extractelement <8 x double> %a, i32 7
; CHECK-NEXT:    [[B0:%.*]] = extractelement <8 x double> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <8 x double> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <8 x double> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <8 x double> %b, i32 3
; CHECK-NEXT:    [[B4:%.*]] = extractelement <8 x double> %b, i32 4
; CHECK-NEXT:    [[B5:%.*]] = extractelement <8 x double> %b, i32 5
; CHECK-NEXT:    [[B6:%.*]] = extractelement <8 x double> %b, i32 6
; CHECK-NEXT:    [[B7:%.*]] = extractelement <8 x double> %b, i32 7
; CHECK-NEXT:    [[C0:%.*]] = fmul double [[A0]], [[B0]]
; CHECK-NEXT:    [[C1:%.*]] = fmul double [[A1]], [[B1]]
; CHECK-NEXT:    [[C2:%.*]] = fmul double [[A2]], [[B2]]
; CHECK-NEXT:    [[C3:%.*]] = fmul double [[A3]], [[B3]]
; CHECK-NEXT:    [[C4:%.*]] = fmul double [[A4]], [[B4]]
; CHECK-NEXT:    [[C5:%.*]] = fmul double [[A5]], [[B5]]
; CHECK-NEXT:    [[C6:%.*]] = fmul double [[A6]], [[B6]]
; CHECK-NEXT:    [[C7:%.*]] = fmul double [[A7]], [[B7]]
; CHECK-NEXT:    [[R0:%.*]] = insertelement <8 x double> undef, double [[C0]], i32 0
; CHECK-NEXT:    [[R1:%.*]] = insertelement <8 x double> [[R0]], double [[C1]], i32 1
; CHECK-NEXT:    [[R2:%.*]] = insertelement <8 x double> [[R1]], double [[C2]], i32 2
; CHECK-NEXT:    [[R3:%.*]] = insertelement <8 x double> [[R2]], double [[C3]], i32 3
; CHECK-NEXT:    [[R4:%.*]] = insertelement <8 x double> [[R3]], double [[C4]], i32 4
; CHECK-NEXT:    [[R5:%.*]] = insertelement <8 x double> [[R4]], double [[C5]], i32 5
; CHECK-NEXT:    [[R6:%.*]] = insertelement <8 x double> [[R5]], double [[C6]], i32 6
; CHECK-NEXT:    [[R7:%.*]] = insertelement <8 x double> [[R6]], double [[C7]], i32 7
; CHECK-NEXT:    ret <8 x double> [[R7]]
;
  %a0 = extractelement <8 x double> %a, i32 0
  %a1 = extractelement <8 x double> %a, i32 1
  %a2 = extractelement <8 x double> %a, i32 2
  %a3 = extractelement <8 x double> %a, i32 3
  %a4 = extractelement <8 x double> %a, i32 4
  %a5 = extractelement <8 x double> %a, i32 5
  %a6 = extractelement <8 x double> %a, i32 6
  %a7 = extractelement <8 x double> %a, i32 7
  %b0 = extractelement <8 x double> %b, i32 0
  %b1 = extractelement <8 x double> %b, i32 1
  %b2 = extractelement <8 x double> %b, i32 2
  %b3 = extractelement <8 x double> %b, i32 3
  %b4 = extractelement <8 x double> %b, i32 4
  %b5 = extractelement <8 x double> %b, i32 5
  %b6 = extractelement <8 x double> %b, i32 6
  %b7 = extractelement <8 x double> %b, i32 7
  %c0 = fmul double %a0, %b0
  %c1 = fmul double %a1, %b1
  %c2 = fmul double %a2, %b2
  %c3 = fmul double %a3, %b3
  %c4 = fmul double %a4, %b4
  %c5 = fmul double %a5, %b5
  %c6 = fmul double %a6, %b6
  %c7 = fmul double %a7, %b7
  %r0 = insertelement <8 x double> undef, double %c0, i32 0
  %r1 = insertelement <8 x double> %r0,   double %c1, i32 1
  %r2 = insertelement <8 x double> %r1,   double %c2, i32 2
  %r3 = insertelement <8 x double> %r2,   double %c3, i32 3
  %r4 = insertelement <8 x double> %r3,   double %c4, i32 4
  %r5 = insertelement <8 x double> %r4,   double %c5, i32 5
  %r6 = insertelement <8 x double> %r5,   double %c6, i32 6
  %r7 = insertelement <8 x double> %r6,   double %c7, i32 7
  ret <8 x double> %r7
}

define <8 x double> @buildvector_div_8f64(<8 x double> %a, <8 x double> %b) {
; CHECK-LABEL: @buildvector_div_8f64(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <8 x double> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <8 x double> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <8 x double> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <8 x double> %a, i32 3
; CHECK-NEXT:    [[A4:%.*]] = extractelement <8 x double> %a, i32 4
; CHECK-NEXT:    [[A5:%.*]] = extractelement <8 x double> %a, i32 5
; CHECK-NEXT:    [[A6:%.*]] = extractelement <8 x double> %a, i32 6
; CHECK-NEXT:    [[A7:%.*]] = extractelement <8 x double> %a, i32 7
; CHECK-NEXT:    [[B0:%.*]] = extractelement <8 x double> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <8 x double> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <8 x double> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <8 x double> %b, i32 3
; CHECK-NEXT:    [[B4:%.*]] = extractelement <8 x double> %b, i32 4
; CHECK-NEXT:    [[B5:%.*]] = extractelement <8 x double> %b, i32 5
; CHECK-NEXT:    [[B6:%.*]] = extractelement <8 x double> %b, i32 6
; CHECK-NEXT:    [[B7:%.*]] = extractelement <8 x double> %b, i32 7
; CHECK-NEXT:    [[TMP1:%.*]] = insertelement <2 x double> undef, double [[A0]], i32 0
; CHECK-NEXT:    [[TMP2:%.*]] = insertelement <2 x double> [[TMP1]], double [[A1]], i32 1
; CHECK-NEXT:    [[TMP3:%.*]] = insertelement <2 x double> undef, double [[B0]], i32 0
; CHECK-NEXT:    [[TMP4:%.*]] = insertelement <2 x double> [[TMP3]], double [[B1]], i32 1
; CHECK-NEXT:    [[TMP5:%.*]] = fdiv <2 x double> [[TMP2]], [[TMP4]]
; CHECK-NEXT:    [[TMP6:%.*]] = insertelement <2 x double> undef, double [[A2]], i32 0
; CHECK-NEXT:    [[TMP7:%.*]] = insertelement <2 x double> [[TMP6]], double [[A3]], i32 1
; CHECK-NEXT:    [[TMP8:%.*]] = insertelement <2 x double> undef, double [[B2]], i32 0
; CHECK-NEXT:    [[TMP9:%.*]] = insertelement <2 x double> [[TMP8]], double [[B3]], i32 1
; CHECK-NEXT:    [[TMP10:%.*]] = fdiv <2 x double> [[TMP7]], [[TMP9]]
; CHECK-NEXT:    [[TMP11:%.*]] = insertelement <2 x double> undef, double [[A4]], i32 0
; CHECK-NEXT:    [[TMP12:%.*]] = insertelement <2 x double> [[TMP11]], double [[A5]], i32 1
; CHECK-NEXT:    [[TMP13:%.*]] = insertelement <2 x double> undef, double [[B4]], i32 0
; CHECK-NEXT:    [[TMP14:%.*]] = insertelement <2 x double> [[TMP13]], double [[B5]], i32 1
; CHECK-NEXT:    [[TMP15:%.*]] = fdiv <2 x double> [[TMP12]], [[TMP14]]
; CHECK-NEXT:    [[TMP16:%.*]] = insertelement <2 x double> undef, double [[A6]], i32 0
; CHECK-NEXT:    [[TMP17:%.*]] = insertelement <2 x double> [[TMP16]], double [[A7]], i32 1
; CHECK-NEXT:    [[TMP18:%.*]] = insertelement <2 x double> undef, double [[B6]], i32 0
; CHECK-NEXT:    [[TMP19:%.*]] = insertelement <2 x double> [[TMP18]], double [[B7]], i32 1
; CHECK-NEXT:    [[TMP20:%.*]] = fdiv <2 x double> [[TMP17]], [[TMP19]]
; CHECK-NEXT:    [[TMP21:%.*]] = extractelement <2 x double> [[TMP5]], i32 0
; CHECK-NEXT:    [[R0:%.*]] = insertelement <8 x double> undef, double [[TMP21]], i32 0
; CHECK-NEXT:    [[TMP22:%.*]] = extractelement <2 x double> [[TMP5]], i32 1
; CHECK-NEXT:    [[R1:%.*]] = insertelement <8 x double> [[R0]], double [[TMP22]], i32 1
; CHECK-NEXT:    [[TMP23:%.*]] = extractelement <2 x double> [[TMP10]], i32 0
; CHECK-NEXT:    [[R2:%.*]] = insertelement <8 x double> [[R1]], double [[TMP23]], i32 2
; CHECK-NEXT:    [[TMP24:%.*]] = extractelement <2 x double> [[TMP10]], i32 1
; CHECK-NEXT:    [[R3:%.*]] = insertelement <8 x double> [[R2]], double [[TMP24]], i32 3
; CHECK-NEXT:    [[TMP25:%.*]] = extractelement <2 x double> [[TMP15]], i32 0
; CHECK-NEXT:    [[R4:%.*]] = insertelement <8 x double> [[R3]], double [[TMP25]], i32 4
; CHECK-NEXT:    [[TMP26:%.*]] = extractelement <2 x double> [[TMP15]], i32 1
; CHECK-NEXT:    [[R5:%.*]] = insertelement <8 x double> [[R4]], double [[TMP26]], i32 5
; CHECK-NEXT:    [[TMP27:%.*]] = extractelement <2 x double> [[TMP20]], i32 0
; CHECK-NEXT:    [[R6:%.*]] = insertelement <8 x double> [[R5]], double [[TMP27]], i32 6
; CHECK-NEXT:    [[TMP28:%.*]] = extractelement <2 x double> [[TMP20]], i32 1
; CHECK-NEXT:    [[R7:%.*]] = insertelement <8 x double> [[R6]], double [[TMP28]], i32 7
; CHECK-NEXT:    ret <8 x double> [[R7]]
;
  %a0 = extractelement <8 x double> %a, i32 0
  %a1 = extractelement <8 x double> %a, i32 1
  %a2 = extractelement <8 x double> %a, i32 2
  %a3 = extractelement <8 x double> %a, i32 3
  %a4 = extractelement <8 x double> %a, i32 4
  %a5 = extractelement <8 x double> %a, i32 5
  %a6 = extractelement <8 x double> %a, i32 6
  %a7 = extractelement <8 x double> %a, i32 7
  %b0 = extractelement <8 x double> %b, i32 0
  %b1 = extractelement <8 x double> %b, i32 1
  %b2 = extractelement <8 x double> %b, i32 2
  %b3 = extractelement <8 x double> %b, i32 3
  %b4 = extractelement <8 x double> %b, i32 4
  %b5 = extractelement <8 x double> %b, i32 5
  %b6 = extractelement <8 x double> %b, i32 6
  %b7 = extractelement <8 x double> %b, i32 7
  %c0 = fdiv double %a0, %b0
  %c1 = fdiv double %a1, %b1
  %c2 = fdiv double %a2, %b2
  %c3 = fdiv double %a3, %b3
  %c4 = fdiv double %a4, %b4
  %c5 = fdiv double %a5, %b5
  %c6 = fdiv double %a6, %b6
  %c7 = fdiv double %a7, %b7
  %r0 = insertelement <8 x double> undef, double %c0, i32 0
  %r1 = insertelement <8 x double> %r0,   double %c1, i32 1
  %r2 = insertelement <8 x double> %r1,   double %c2, i32 2
  %r3 = insertelement <8 x double> %r2,   double %c3, i32 3
  %r4 = insertelement <8 x double> %r3,   double %c4, i32 4
  %r5 = insertelement <8 x double> %r4,   double %c5, i32 5
  %r6 = insertelement <8 x double> %r5,   double %c6, i32 6
  %r7 = insertelement <8 x double> %r6,   double %c7, i32 7
  ret <8 x double> %r7
}

define <16 x float> @buildvector_add_16f32(<16 x float> %a, <16 x float> %b) {
; CHECK-LABEL: @buildvector_add_16f32(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <16 x float> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <16 x float> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <16 x float> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <16 x float> %a, i32 3
; CHECK-NEXT:    [[A4:%.*]] = extractelement <16 x float> %a, i32 4
; CHECK-NEXT:    [[A5:%.*]] = extractelement <16 x float> %a, i32 5
; CHECK-NEXT:    [[A6:%.*]] = extractelement <16 x float> %a, i32 6
; CHECK-NEXT:    [[A7:%.*]] = extractelement <16 x float> %a, i32 7
; CHECK-NEXT:    [[A8:%.*]] = extractelement <16 x float> %a, i32 8
; CHECK-NEXT:    [[A9:%.*]] = extractelement <16 x float> %a, i32 9
; CHECK-NEXT:    [[A10:%.*]] = extractelement <16 x float> %a, i32 10
; CHECK-NEXT:    [[A11:%.*]] = extractelement <16 x float> %a, i32 11
; CHECK-NEXT:    [[A12:%.*]] = extractelement <16 x float> %a, i32 12
; CHECK-NEXT:    [[A13:%.*]] = extractelement <16 x float> %a, i32 13
; CHECK-NEXT:    [[A14:%.*]] = extractelement <16 x float> %a, i32 14
; CHECK-NEXT:    [[A15:%.*]] = extractelement <16 x float> %a, i32 15
; CHECK-NEXT:    [[B0:%.*]] = extractelement <16 x float> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <16 x float> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <16 x float> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <16 x float> %b, i32 3
; CHECK-NEXT:    [[B4:%.*]] = extractelement <16 x float> %b, i32 4
; CHECK-NEXT:    [[B5:%.*]] = extractelement <16 x float> %b, i32 5
; CHECK-NEXT:    [[B6:%.*]] = extractelement <16 x float> %b, i32 6
; CHECK-NEXT:    [[B7:%.*]] = extractelement <16 x float> %b, i32 7
; CHECK-NEXT:    [[B8:%.*]] = extractelement <16 x float> %b, i32 8
; CHECK-NEXT:    [[B9:%.*]] = extractelement <16 x float> %b, i32 9
; CHECK-NEXT:    [[B10:%.*]] = extractelement <16 x float> %b, i32 10
; CHECK-NEXT:    [[B11:%.*]] = extractelement <16 x float> %b, i32 11
; CHECK-NEXT:    [[B12:%.*]] = extractelement <16 x float> %b, i32 12
; CHECK-NEXT:    [[B13:%.*]] = extractelement <16 x float> %b, i32 13
; CHECK-NEXT:    [[B14:%.*]] = extractelement <16 x float> %b, i32 14
; CHECK-NEXT:    [[B15:%.*]] = extractelement <16 x float> %b, i32 15
; CHECK-NEXT:    [[C0:%.*]] = fadd float [[A0]], [[B0]]
; CHECK-NEXT:    [[C1:%.*]] = fadd float [[A1]], [[B1]]
; CHECK-NEXT:    [[C2:%.*]] = fadd float [[A2]], [[B2]]
; CHECK-NEXT:    [[C3:%.*]] = fadd float [[A3]], [[B3]]
; CHECK-NEXT:    [[C4:%.*]] = fadd float [[A4]], [[B4]]
; CHECK-NEXT:    [[C5:%.*]] = fadd float [[A5]], [[B5]]
; CHECK-NEXT:    [[C6:%.*]] = fadd float [[A6]], [[B6]]
; CHECK-NEXT:    [[C7:%.*]] = fadd float [[A7]], [[B7]]
; CHECK-NEXT:    [[C8:%.*]] = fadd float [[A8]], [[B8]]
; CHECK-NEXT:    [[C9:%.*]] = fadd float [[A9]], [[B9]]
; CHECK-NEXT:    [[C10:%.*]] = fadd float [[A10]], [[B10]]
; CHECK-NEXT:    [[C11:%.*]] = fadd float [[A11]], [[B11]]
; CHECK-NEXT:    [[C12:%.*]] = fadd float [[A12]], [[B12]]
; CHECK-NEXT:    [[C13:%.*]] = fadd float [[A13]], [[B13]]
; CHECK-NEXT:    [[C14:%.*]] = fadd float [[A14]], [[B14]]
; CHECK-NEXT:    [[C15:%.*]] = fadd float [[A15]], [[B15]]
; CHECK-NEXT:    [[R0:%.*]] = insertelement <16 x float> undef, float [[C0]], i32 0
; CHECK-NEXT:    [[R1:%.*]] = insertelement <16 x float> [[R0]], float [[C1]], i32 1
; CHECK-NEXT:    [[R2:%.*]] = insertelement <16 x float> [[R1]], float [[C2]], i32 2
; CHECK-NEXT:    [[R3:%.*]] = insertelement <16 x float> [[R2]], float [[C3]], i32 3
; CHECK-NEXT:    [[R4:%.*]] = insertelement <16 x float> [[R3]], float [[C4]], i32 4
; CHECK-NEXT:    [[R5:%.*]] = insertelement <16 x float> [[R4]], float [[C5]], i32 5
; CHECK-NEXT:    [[R6:%.*]] = insertelement <16 x float> [[R5]], float [[C6]], i32 6
; CHECK-NEXT:    [[R7:%.*]] = insertelement <16 x float> [[R6]], float [[C7]], i32 7
; CHECK-NEXT:    [[R8:%.*]] = insertelement <16 x float> [[R7]], float [[C8]], i32 8
; CHECK-NEXT:    [[R9:%.*]] = insertelement <16 x float> [[R8]], float [[C9]], i32 9
; CHECK-NEXT:    [[R10:%.*]] = insertelement <16 x float> [[R9]], float [[C10]], i32 10
; CHECK-NEXT:    [[R11:%.*]] = insertelement <16 x float> [[R10]], float [[C11]], i32 11
; CHECK-NEXT:    [[R12:%.*]] = insertelement <16 x float> [[R11]], float [[C12]], i32 12
; CHECK-NEXT:    [[R13:%.*]] = insertelement <16 x float> [[R12]], float [[C13]], i32 13
; CHECK-NEXT:    [[R14:%.*]] = insertelement <16 x float> [[R13]], float [[C14]], i32 14
; CHECK-NEXT:    [[R15:%.*]] = insertelement <16 x float> [[R14]], float [[C15]], i32 15
; CHECK-NEXT:    ret <16 x float> [[R15]]
;
  %a0  = extractelement <16 x float> %a, i32 0
  %a1  = extractelement <16 x float> %a, i32 1
  %a2  = extractelement <16 x float> %a, i32 2
  %a3  = extractelement <16 x float> %a, i32 3
  %a4  = extractelement <16 x float> %a, i32 4
  %a5  = extractelement <16 x float> %a, i32 5
  %a6  = extractelement <16 x float> %a, i32 6
  %a7  = extractelement <16 x float> %a, i32 7
  %a8  = extractelement <16 x float> %a, i32 8
  %a9  = extractelement <16 x float> %a, i32 9
  %a10 = extractelement <16 x float> %a, i32 10
  %a11 = extractelement <16 x float> %a, i32 11
  %a12 = extractelement <16 x float> %a, i32 12
  %a13 = extractelement <16 x float> %a, i32 13
  %a14 = extractelement <16 x float> %a, i32 14
  %a15 = extractelement <16 x float> %a, i32 15
  %b0  = extractelement <16 x float> %b, i32 0
  %b1  = extractelement <16 x float> %b, i32 1
  %b2  = extractelement <16 x float> %b, i32 2
  %b3  = extractelement <16 x float> %b, i32 3
  %b4  = extractelement <16 x float> %b, i32 4
  %b5  = extractelement <16 x float> %b, i32 5
  %b6  = extractelement <16 x float> %b, i32 6
  %b7  = extractelement <16 x float> %b, i32 7
  %b8  = extractelement <16 x float> %b, i32 8
  %b9  = extractelement <16 x float> %b, i32 9
  %b10 = extractelement <16 x float> %b, i32 10
  %b11 = extractelement <16 x float> %b, i32 11
  %b12 = extractelement <16 x float> %b, i32 12
  %b13 = extractelement <16 x float> %b, i32 13
  %b14 = extractelement <16 x float> %b, i32 14
  %b15 = extractelement <16 x float> %b, i32 15
  %c0  = fadd float %a0 , %b0
  %c1  = fadd float %a1 , %b1
  %c2  = fadd float %a2 , %b2
  %c3  = fadd float %a3 , %b3
  %c4  = fadd float %a4 , %b4
  %c5  = fadd float %a5 , %b5
  %c6  = fadd float %a6 , %b6
  %c7  = fadd float %a7 , %b7
  %c8  = fadd float %a8 , %b8
  %c9  = fadd float %a9 , %b9
  %c10 = fadd float %a10, %b10
  %c11 = fadd float %a11, %b11
  %c12 = fadd float %a12, %b12
  %c13 = fadd float %a13, %b13
  %c14 = fadd float %a14, %b14
  %c15 = fadd float %a15, %b15
  %r0  = insertelement <16 x float> undef, float %c0 , i32 0
  %r1  = insertelement <16 x float> %r0 ,  float %c1 , i32 1
  %r2  = insertelement <16 x float> %r1 ,  float %c2 , i32 2
  %r3  = insertelement <16 x float> %r2 ,  float %c3 , i32 3
  %r4  = insertelement <16 x float> %r3 ,  float %c4 , i32 4
  %r5  = insertelement <16 x float> %r4 ,  float %c5 , i32 5
  %r6  = insertelement <16 x float> %r5 ,  float %c6 , i32 6
  %r7  = insertelement <16 x float> %r6 ,  float %c7 , i32 7
  %r8  = insertelement <16 x float> %r7 ,  float %c8 , i32 8
  %r9  = insertelement <16 x float> %r8 ,  float %c9 , i32 9
  %r10 = insertelement <16 x float> %r9 ,  float %c10, i32 10
  %r11 = insertelement <16 x float> %r10,  float %c11, i32 11
  %r12 = insertelement <16 x float> %r11,  float %c12, i32 12
  %r13 = insertelement <16 x float> %r12,  float %c13, i32 13
  %r14 = insertelement <16 x float> %r13,  float %c14, i32 14
  %r15 = insertelement <16 x float> %r14,  float %c15, i32 15
  ret <16 x float> %r15
}

define <16 x float> @buildvector_sub_16f32(<16 x float> %a, <16 x float> %b) {
; CHECK-LABEL: @buildvector_sub_16f32(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <16 x float> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <16 x float> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <16 x float> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <16 x float> %a, i32 3
; CHECK-NEXT:    [[A4:%.*]] = extractelement <16 x float> %a, i32 4
; CHECK-NEXT:    [[A5:%.*]] = extractelement <16 x float> %a, i32 5
; CHECK-NEXT:    [[A6:%.*]] = extractelement <16 x float> %a, i32 6
; CHECK-NEXT:    [[A7:%.*]] = extractelement <16 x float> %a, i32 7
; CHECK-NEXT:    [[A8:%.*]] = extractelement <16 x float> %a, i32 8
; CHECK-NEXT:    [[A9:%.*]] = extractelement <16 x float> %a, i32 9
; CHECK-NEXT:    [[A10:%.*]] = extractelement <16 x float> %a, i32 10
; CHECK-NEXT:    [[A11:%.*]] = extractelement <16 x float> %a, i32 11
; CHECK-NEXT:    [[A12:%.*]] = extractelement <16 x float> %a, i32 12
; CHECK-NEXT:    [[A13:%.*]] = extractelement <16 x float> %a, i32 13
; CHECK-NEXT:    [[A14:%.*]] = extractelement <16 x float> %a, i32 14
; CHECK-NEXT:    [[A15:%.*]] = extractelement <16 x float> %a, i32 15
; CHECK-NEXT:    [[B0:%.*]] = extractelement <16 x float> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <16 x float> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <16 x float> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <16 x float> %b, i32 3
; CHECK-NEXT:    [[B4:%.*]] = extractelement <16 x float> %b, i32 4
; CHECK-NEXT:    [[B5:%.*]] = extractelement <16 x float> %b, i32 5
; CHECK-NEXT:    [[B6:%.*]] = extractelement <16 x float> %b, i32 6
; CHECK-NEXT:    [[B7:%.*]] = extractelement <16 x float> %b, i32 7
; CHECK-NEXT:    [[B8:%.*]] = extractelement <16 x float> %b, i32 8
; CHECK-NEXT:    [[B9:%.*]] = extractelement <16 x float> %b, i32 9
; CHECK-NEXT:    [[B10:%.*]] = extractelement <16 x float> %b, i32 10
; CHECK-NEXT:    [[B11:%.*]] = extractelement <16 x float> %b, i32 11
; CHECK-NEXT:    [[B12:%.*]] = extractelement <16 x float> %b, i32 12
; CHECK-NEXT:    [[B13:%.*]] = extractelement <16 x float> %b, i32 13
; CHECK-NEXT:    [[B14:%.*]] = extractelement <16 x float> %b, i32 14
; CHECK-NEXT:    [[B15:%.*]] = extractelement <16 x float> %b, i32 15
; CHECK-NEXT:    [[C0:%.*]] = fsub float [[A0]], [[B0]]
; CHECK-NEXT:    [[C1:%.*]] = fsub float [[A1]], [[B1]]
; CHECK-NEXT:    [[C2:%.*]] = fsub float [[A2]], [[B2]]
; CHECK-NEXT:    [[C3:%.*]] = fsub float [[A3]], [[B3]]
; CHECK-NEXT:    [[C4:%.*]] = fsub float [[A4]], [[B4]]
; CHECK-NEXT:    [[C5:%.*]] = fsub float [[A5]], [[B5]]
; CHECK-NEXT:    [[C6:%.*]] = fsub float [[A6]], [[B6]]
; CHECK-NEXT:    [[C7:%.*]] = fsub float [[A7]], [[B7]]
; CHECK-NEXT:    [[C8:%.*]] = fsub float [[A8]], [[B8]]
; CHECK-NEXT:    [[C9:%.*]] = fsub float [[A9]], [[B9]]
; CHECK-NEXT:    [[C10:%.*]] = fsub float [[A10]], [[B10]]
; CHECK-NEXT:    [[C11:%.*]] = fsub float [[A11]], [[B11]]
; CHECK-NEXT:    [[C12:%.*]] = fsub float [[A12]], [[B12]]
; CHECK-NEXT:    [[C13:%.*]] = fsub float [[A13]], [[B13]]
; CHECK-NEXT:    [[C14:%.*]] = fsub float [[A14]], [[B14]]
; CHECK-NEXT:    [[C15:%.*]] = fsub float [[A15]], [[B15]]
; CHECK-NEXT:    [[R0:%.*]] = insertelement <16 x float> undef, float [[C0]], i32 0
; CHECK-NEXT:    [[R1:%.*]] = insertelement <16 x float> [[R0]], float [[C1]], i32 1
; CHECK-NEXT:    [[R2:%.*]] = insertelement <16 x float> [[R1]], float [[C2]], i32 2
; CHECK-NEXT:    [[R3:%.*]] = insertelement <16 x float> [[R2]], float [[C3]], i32 3
; CHECK-NEXT:    [[R4:%.*]] = insertelement <16 x float> [[R3]], float [[C4]], i32 4
; CHECK-NEXT:    [[R5:%.*]] = insertelement <16 x float> [[R4]], float [[C5]], i32 5
; CHECK-NEXT:    [[R6:%.*]] = insertelement <16 x float> [[R5]], float [[C6]], i32 6
; CHECK-NEXT:    [[R7:%.*]] = insertelement <16 x float> [[R6]], float [[C7]], i32 7
; CHECK-NEXT:    [[R8:%.*]] = insertelement <16 x float> [[R7]], float [[C8]], i32 8
; CHECK-NEXT:    [[R9:%.*]] = insertelement <16 x float> [[R8]], float [[C9]], i32 9
; CHECK-NEXT:    [[R10:%.*]] = insertelement <16 x float> [[R9]], float [[C10]], i32 10
; CHECK-NEXT:    [[R11:%.*]] = insertelement <16 x float> [[R10]], float [[C11]], i32 11
; CHECK-NEXT:    [[R12:%.*]] = insertelement <16 x float> [[R11]], float [[C12]], i32 12
; CHECK-NEXT:    [[R13:%.*]] = insertelement <16 x float> [[R12]], float [[C13]], i32 13
; CHECK-NEXT:    [[R14:%.*]] = insertelement <16 x float> [[R13]], float [[C14]], i32 14
; CHECK-NEXT:    [[R15:%.*]] = insertelement <16 x float> [[R14]], float [[C15]], i32 15
; CHECK-NEXT:    ret <16 x float> [[R15]]
;
  %a0  = extractelement <16 x float> %a, i32 0
  %a1  = extractelement <16 x float> %a, i32 1
  %a2  = extractelement <16 x float> %a, i32 2
  %a3  = extractelement <16 x float> %a, i32 3
  %a4  = extractelement <16 x float> %a, i32 4
  %a5  = extractelement <16 x float> %a, i32 5
  %a6  = extractelement <16 x float> %a, i32 6
  %a7  = extractelement <16 x float> %a, i32 7
  %a8  = extractelement <16 x float> %a, i32 8
  %a9  = extractelement <16 x float> %a, i32 9
  %a10 = extractelement <16 x float> %a, i32 10
  %a11 = extractelement <16 x float> %a, i32 11
  %a12 = extractelement <16 x float> %a, i32 12
  %a13 = extractelement <16 x float> %a, i32 13
  %a14 = extractelement <16 x float> %a, i32 14
  %a15 = extractelement <16 x float> %a, i32 15
  %b0  = extractelement <16 x float> %b, i32 0
  %b1  = extractelement <16 x float> %b, i32 1
  %b2  = extractelement <16 x float> %b, i32 2
  %b3  = extractelement <16 x float> %b, i32 3
  %b4  = extractelement <16 x float> %b, i32 4
  %b5  = extractelement <16 x float> %b, i32 5
  %b6  = extractelement <16 x float> %b, i32 6
  %b7  = extractelement <16 x float> %b, i32 7
  %b8  = extractelement <16 x float> %b, i32 8
  %b9  = extractelement <16 x float> %b, i32 9
  %b10 = extractelement <16 x float> %b, i32 10
  %b11 = extractelement <16 x float> %b, i32 11
  %b12 = extractelement <16 x float> %b, i32 12
  %b13 = extractelement <16 x float> %b, i32 13
  %b14 = extractelement <16 x float> %b, i32 14
  %b15 = extractelement <16 x float> %b, i32 15
  %c0  = fsub float %a0 , %b0
  %c1  = fsub float %a1 , %b1
  %c2  = fsub float %a2 , %b2
  %c3  = fsub float %a3 , %b3
  %c4  = fsub float %a4 , %b4
  %c5  = fsub float %a5 , %b5
  %c6  = fsub float %a6 , %b6
  %c7  = fsub float %a7 , %b7
  %c8  = fsub float %a8 , %b8
  %c9  = fsub float %a9 , %b9
  %c10 = fsub float %a10, %b10
  %c11 = fsub float %a11, %b11
  %c12 = fsub float %a12, %b12
  %c13 = fsub float %a13, %b13
  %c14 = fsub float %a14, %b14
  %c15 = fsub float %a15, %b15
  %r0  = insertelement <16 x float> undef, float %c0 , i32 0
  %r1  = insertelement <16 x float> %r0 ,  float %c1 , i32 1
  %r2  = insertelement <16 x float> %r1 ,  float %c2 , i32 2
  %r3  = insertelement <16 x float> %r2 ,  float %c3 , i32 3
  %r4  = insertelement <16 x float> %r3 ,  float %c4 , i32 4
  %r5  = insertelement <16 x float> %r4 ,  float %c5 , i32 5
  %r6  = insertelement <16 x float> %r5 ,  float %c6 , i32 6
  %r7  = insertelement <16 x float> %r6 ,  float %c7 , i32 7
  %r8  = insertelement <16 x float> %r7 ,  float %c8 , i32 8
  %r9  = insertelement <16 x float> %r8 ,  float %c9 , i32 9
  %r10 = insertelement <16 x float> %r9 ,  float %c10, i32 10
  %r11 = insertelement <16 x float> %r10,  float %c11, i32 11
  %r12 = insertelement <16 x float> %r11,  float %c12, i32 12
  %r13 = insertelement <16 x float> %r12,  float %c13, i32 13
  %r14 = insertelement <16 x float> %r13,  float %c14, i32 14
  %r15 = insertelement <16 x float> %r14,  float %c15, i32 15
  ret <16 x float> %r15
}

define <16 x float> @buildvector_mul_16f32(<16 x float> %a, <16 x float> %b) {
; CHECK-LABEL: @buildvector_mul_16f32(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <16 x float> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <16 x float> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <16 x float> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <16 x float> %a, i32 3
; CHECK-NEXT:    [[A4:%.*]] = extractelement <16 x float> %a, i32 4
; CHECK-NEXT:    [[A5:%.*]] = extractelement <16 x float> %a, i32 5
; CHECK-NEXT:    [[A6:%.*]] = extractelement <16 x float> %a, i32 6
; CHECK-NEXT:    [[A7:%.*]] = extractelement <16 x float> %a, i32 7
; CHECK-NEXT:    [[A8:%.*]] = extractelement <16 x float> %a, i32 8
; CHECK-NEXT:    [[A9:%.*]] = extractelement <16 x float> %a, i32 9
; CHECK-NEXT:    [[A10:%.*]] = extractelement <16 x float> %a, i32 10
; CHECK-NEXT:    [[A11:%.*]] = extractelement <16 x float> %a, i32 11
; CHECK-NEXT:    [[A12:%.*]] = extractelement <16 x float> %a, i32 12
; CHECK-NEXT:    [[A13:%.*]] = extractelement <16 x float> %a, i32 13
; CHECK-NEXT:    [[A14:%.*]] = extractelement <16 x float> %a, i32 14
; CHECK-NEXT:    [[A15:%.*]] = extractelement <16 x float> %a, i32 15
; CHECK-NEXT:    [[B0:%.*]] = extractelement <16 x float> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <16 x float> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <16 x float> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <16 x float> %b, i32 3
; CHECK-NEXT:    [[B4:%.*]] = extractelement <16 x float> %b, i32 4
; CHECK-NEXT:    [[B5:%.*]] = extractelement <16 x float> %b, i32 5
; CHECK-NEXT:    [[B6:%.*]] = extractelement <16 x float> %b, i32 6
; CHECK-NEXT:    [[B7:%.*]] = extractelement <16 x float> %b, i32 7
; CHECK-NEXT:    [[B8:%.*]] = extractelement <16 x float> %b, i32 8
; CHECK-NEXT:    [[B9:%.*]] = extractelement <16 x float> %b, i32 9
; CHECK-NEXT:    [[B10:%.*]] = extractelement <16 x float> %b, i32 10
; CHECK-NEXT:    [[B11:%.*]] = extractelement <16 x float> %b, i32 11
; CHECK-NEXT:    [[B12:%.*]] = extractelement <16 x float> %b, i32 12
; CHECK-NEXT:    [[B13:%.*]] = extractelement <16 x float> %b, i32 13
; CHECK-NEXT:    [[B14:%.*]] = extractelement <16 x float> %b, i32 14
; CHECK-NEXT:    [[B15:%.*]] = extractelement <16 x float> %b, i32 15
; CHECK-NEXT:    [[C0:%.*]] = fmul float [[A0]], [[B0]]
; CHECK-NEXT:    [[C1:%.*]] = fmul float [[A1]], [[B1]]
; CHECK-NEXT:    [[C2:%.*]] = fmul float [[A2]], [[B2]]
; CHECK-NEXT:    [[C3:%.*]] = fmul float [[A3]], [[B3]]
; CHECK-NEXT:    [[C4:%.*]] = fmul float [[A4]], [[B4]]
; CHECK-NEXT:    [[C5:%.*]] = fmul float [[A5]], [[B5]]
; CHECK-NEXT:    [[C6:%.*]] = fmul float [[A6]], [[B6]]
; CHECK-NEXT:    [[C7:%.*]] = fmul float [[A7]], [[B7]]
; CHECK-NEXT:    [[C8:%.*]] = fmul float [[A8]], [[B8]]
; CHECK-NEXT:    [[C9:%.*]] = fmul float [[A9]], [[B9]]
; CHECK-NEXT:    [[C10:%.*]] = fmul float [[A10]], [[B10]]
; CHECK-NEXT:    [[C11:%.*]] = fmul float [[A11]], [[B11]]
; CHECK-NEXT:    [[C12:%.*]] = fmul float [[A12]], [[B12]]
; CHECK-NEXT:    [[C13:%.*]] = fmul float [[A13]], [[B13]]
; CHECK-NEXT:    [[C14:%.*]] = fmul float [[A14]], [[B14]]
; CHECK-NEXT:    [[C15:%.*]] = fmul float [[A15]], [[B15]]
; CHECK-NEXT:    [[R0:%.*]] = insertelement <16 x float> undef, float [[C0]], i32 0
; CHECK-NEXT:    [[R1:%.*]] = insertelement <16 x float> [[R0]], float [[C1]], i32 1
; CHECK-NEXT:    [[R2:%.*]] = insertelement <16 x float> [[R1]], float [[C2]], i32 2
; CHECK-NEXT:    [[R3:%.*]] = insertelement <16 x float> [[R2]], float [[C3]], i32 3
; CHECK-NEXT:    [[R4:%.*]] = insertelement <16 x float> [[R3]], float [[C4]], i32 4
; CHECK-NEXT:    [[R5:%.*]] = insertelement <16 x float> [[R4]], float [[C5]], i32 5
; CHECK-NEXT:    [[R6:%.*]] = insertelement <16 x float> [[R5]], float [[C6]], i32 6
; CHECK-NEXT:    [[R7:%.*]] = insertelement <16 x float> [[R6]], float [[C7]], i32 7
; CHECK-NEXT:    [[R8:%.*]] = insertelement <16 x float> [[R7]], float [[C8]], i32 8
; CHECK-NEXT:    [[R9:%.*]] = insertelement <16 x float> [[R8]], float [[C9]], i32 9
; CHECK-NEXT:    [[R10:%.*]] = insertelement <16 x float> [[R9]], float [[C10]], i32 10
; CHECK-NEXT:    [[R11:%.*]] = insertelement <16 x float> [[R10]], float [[C11]], i32 11
; CHECK-NEXT:    [[R12:%.*]] = insertelement <16 x float> [[R11]], float [[C12]], i32 12
; CHECK-NEXT:    [[R13:%.*]] = insertelement <16 x float> [[R12]], float [[C13]], i32 13
; CHECK-NEXT:    [[R14:%.*]] = insertelement <16 x float> [[R13]], float [[C14]], i32 14
; CHECK-NEXT:    [[R15:%.*]] = insertelement <16 x float> [[R14]], float [[C15]], i32 15
; CHECK-NEXT:    ret <16 x float> [[R15]]
;
  %a0  = extractelement <16 x float> %a, i32 0
  %a1  = extractelement <16 x float> %a, i32 1
  %a2  = extractelement <16 x float> %a, i32 2
  %a3  = extractelement <16 x float> %a, i32 3
  %a4  = extractelement <16 x float> %a, i32 4
  %a5  = extractelement <16 x float> %a, i32 5
  %a6  = extractelement <16 x float> %a, i32 6
  %a7  = extractelement <16 x float> %a, i32 7
  %a8  = extractelement <16 x float> %a, i32 8
  %a9  = extractelement <16 x float> %a, i32 9
  %a10 = extractelement <16 x float> %a, i32 10
  %a11 = extractelement <16 x float> %a, i32 11
  %a12 = extractelement <16 x float> %a, i32 12
  %a13 = extractelement <16 x float> %a, i32 13
  %a14 = extractelement <16 x float> %a, i32 14
  %a15 = extractelement <16 x float> %a, i32 15
  %b0  = extractelement <16 x float> %b, i32 0
  %b1  = extractelement <16 x float> %b, i32 1
  %b2  = extractelement <16 x float> %b, i32 2
  %b3  = extractelement <16 x float> %b, i32 3
  %b4  = extractelement <16 x float> %b, i32 4
  %b5  = extractelement <16 x float> %b, i32 5
  %b6  = extractelement <16 x float> %b, i32 6
  %b7  = extractelement <16 x float> %b, i32 7
  %b8  = extractelement <16 x float> %b, i32 8
  %b9  = extractelement <16 x float> %b, i32 9
  %b10 = extractelement <16 x float> %b, i32 10
  %b11 = extractelement <16 x float> %b, i32 11
  %b12 = extractelement <16 x float> %b, i32 12
  %b13 = extractelement <16 x float> %b, i32 13
  %b14 = extractelement <16 x float> %b, i32 14
  %b15 = extractelement <16 x float> %b, i32 15
  %c0  = fmul float %a0 , %b0
  %c1  = fmul float %a1 , %b1
  %c2  = fmul float %a2 , %b2
  %c3  = fmul float %a3 , %b3
  %c4  = fmul float %a4 , %b4
  %c5  = fmul float %a5 , %b5
  %c6  = fmul float %a6 , %b6
  %c7  = fmul float %a7 , %b7
  %c8  = fmul float %a8 , %b8
  %c9  = fmul float %a9 , %b9
  %c10 = fmul float %a10, %b10
  %c11 = fmul float %a11, %b11
  %c12 = fmul float %a12, %b12
  %c13 = fmul float %a13, %b13
  %c14 = fmul float %a14, %b14
  %c15 = fmul float %a15, %b15
  %r0  = insertelement <16 x float> undef, float %c0 , i32 0
  %r1  = insertelement <16 x float> %r0 ,  float %c1 , i32 1
  %r2  = insertelement <16 x float> %r1 ,  float %c2 , i32 2
  %r3  = insertelement <16 x float> %r2 ,  float %c3 , i32 3
  %r4  = insertelement <16 x float> %r3 ,  float %c4 , i32 4
  %r5  = insertelement <16 x float> %r4 ,  float %c5 , i32 5
  %r6  = insertelement <16 x float> %r5 ,  float %c6 , i32 6
  %r7  = insertelement <16 x float> %r6 ,  float %c7 , i32 7
  %r8  = insertelement <16 x float> %r7 ,  float %c8 , i32 8
  %r9  = insertelement <16 x float> %r8 ,  float %c9 , i32 9
  %r10 = insertelement <16 x float> %r9 ,  float %c10, i32 10
  %r11 = insertelement <16 x float> %r10,  float %c11, i32 11
  %r12 = insertelement <16 x float> %r11,  float %c12, i32 12
  %r13 = insertelement <16 x float> %r12,  float %c13, i32 13
  %r14 = insertelement <16 x float> %r13,  float %c14, i32 14
  %r15 = insertelement <16 x float> %r14,  float %c15, i32 15
  ret <16 x float> %r15
}

define <16 x float> @buildvector_div_16f32(<16 x float> %a, <16 x float> %b) {
; CHECK-LABEL: @buildvector_div_16f32(
; CHECK-NEXT:    [[A0:%.*]] = extractelement <16 x float> %a, i32 0
; CHECK-NEXT:    [[A1:%.*]] = extractelement <16 x float> %a, i32 1
; CHECK-NEXT:    [[A2:%.*]] = extractelement <16 x float> %a, i32 2
; CHECK-NEXT:    [[A3:%.*]] = extractelement <16 x float> %a, i32 3
; CHECK-NEXT:    [[A4:%.*]] = extractelement <16 x float> %a, i32 4
; CHECK-NEXT:    [[A5:%.*]] = extractelement <16 x float> %a, i32 5
; CHECK-NEXT:    [[A6:%.*]] = extractelement <16 x float> %a, i32 6
; CHECK-NEXT:    [[A7:%.*]] = extractelement <16 x float> %a, i32 7
; CHECK-NEXT:    [[A8:%.*]] = extractelement <16 x float> %a, i32 8
; CHECK-NEXT:    [[A9:%.*]] = extractelement <16 x float> %a, i32 9
; CHECK-NEXT:    [[A10:%.*]] = extractelement <16 x float> %a, i32 10
; CHECK-NEXT:    [[A11:%.*]] = extractelement <16 x float> %a, i32 11
; CHECK-NEXT:    [[A12:%.*]] = extractelement <16 x float> %a, i32 12
; CHECK-NEXT:    [[A13:%.*]] = extractelement <16 x float> %a, i32 13
; CHECK-NEXT:    [[A14:%.*]] = extractelement <16 x float> %a, i32 14
; CHECK-NEXT:    [[A15:%.*]] = extractelement <16 x float> %a, i32 15
; CHECK-NEXT:    [[B0:%.*]] = extractelement <16 x float> %b, i32 0
; CHECK-NEXT:    [[B1:%.*]] = extractelement <16 x float> %b, i32 1
; CHECK-NEXT:    [[B2:%.*]] = extractelement <16 x float> %b, i32 2
; CHECK-NEXT:    [[B3:%.*]] = extractelement <16 x float> %b, i32 3
; CHECK-NEXT:    [[B4:%.*]] = extractelement <16 x float> %b, i32 4
; CHECK-NEXT:    [[B5:%.*]] = extractelement <16 x float> %b, i32 5
; CHECK-NEXT:    [[B6:%.*]] = extractelement <16 x float> %b, i32 6
; CHECK-NEXT:    [[B7:%.*]] = extractelement <16 x float> %b, i32 7
; CHECK-NEXT:    [[B8:%.*]] = extractelement <16 x float> %b, i32 8
; CHECK-NEXT:    [[B9:%.*]] = extractelement <16 x float> %b, i32 9
; CHECK-NEXT:    [[B10:%.*]] = extractelement <16 x float> %b, i32 10
; CHECK-NEXT:    [[B11:%.*]] = extractelement <16 x float> %b, i32 11
; CHECK-NEXT:    [[B12:%.*]] = extractelement <16 x float> %b, i32 12
; CHECK-NEXT:    [[B13:%.*]] = extractelement <16 x float> %b, i32 13
; CHECK-NEXT:    [[B14:%.*]] = extractelement <16 x float> %b, i32 14
; CHECK-NEXT:    [[B15:%.*]] = extractelement <16 x float> %b, i32 15
; CHECK-NEXT:    [[TMP1:%.*]] = insertelement <4 x float> undef, float [[A0]], i32 0
; CHECK-NEXT:    [[TMP2:%.*]] = insertelement <4 x float> [[TMP1]], float [[A1]], i32 1
; CHECK-NEXT:    [[TMP3:%.*]] = insertelement <4 x float> [[TMP2]], float [[A2]], i32 2
; CHECK-NEXT:    [[TMP4:%.*]] = insertelement <4 x float> [[TMP3]], float [[A3]], i32 3
; CHECK-NEXT:    [[TMP5:%.*]] = insertelement <4 x float> undef, float [[B0]], i32 0
; CHECK-NEXT:    [[TMP6:%.*]] = insertelement <4 x float> [[TMP5]], float [[B1]], i32 1
; CHECK-NEXT:    [[TMP7:%.*]] = insertelement <4 x float> [[TMP6]], float [[B2]], i32 2
; CHECK-NEXT:    [[TMP8:%.*]] = insertelement <4 x float> [[TMP7]], float [[B3]], i32 3
; CHECK-NEXT:    [[TMP9:%.*]] = fdiv <4 x float> [[TMP4]], [[TMP8]]
; CHECK-NEXT:    [[TMP10:%.*]] = insertelement <4 x float> undef, float [[A4]], i32 0
; CHECK-NEXT:    [[TMP11:%.*]] = insertelement <4 x float> [[TMP10]], float [[A5]], i32 1
; CHECK-NEXT:    [[TMP12:%.*]] = insertelement <4 x float> [[TMP11]], float [[A6]], i32 2
; CHECK-NEXT:    [[TMP13:%.*]] = insertelement <4 x float> [[TMP12]], float [[A7]], i32 3
; CHECK-NEXT:    [[TMP14:%.*]] = insertelement <4 x float> undef, float [[B4]], i32 0
; CHECK-NEXT:    [[TMP15:%.*]] = insertelement <4 x float> [[TMP14]], float [[B5]], i32 1
; CHECK-NEXT:    [[TMP16:%.*]] = insertelement <4 x float> [[TMP15]], float [[B6]], i32 2
; CHECK-NEXT:    [[TMP17:%.*]] = insertelement <4 x float> [[TMP16]], float [[B7]], i32 3
; CHECK-NEXT:    [[TMP18:%.*]] = fdiv <4 x float> [[TMP13]], [[TMP17]]
; CHECK-NEXT:    [[TMP19:%.*]] = insertelement <4 x float> undef, float [[A8]], i32 0
; CHECK-NEXT:    [[TMP20:%.*]] = insertelement <4 x float> [[TMP19]], float [[A9]], i32 1
; CHECK-NEXT:    [[TMP21:%.*]] = insertelement <4 x float> [[TMP20]], float [[A10]], i32 2
; CHECK-NEXT:    [[TMP22:%.*]] = insertelement <4 x float> [[TMP21]], float [[A11]], i32 3
; CHECK-NEXT:    [[TMP23:%.*]] = insertelement <4 x float> undef, float [[B8]], i32 0
; CHECK-NEXT:    [[TMP24:%.*]] = insertelement <4 x float> [[TMP23]], float [[B9]], i32 1
; CHECK-NEXT:    [[TMP25:%.*]] = insertelement <4 x float> [[TMP24]], float [[B10]], i32 2
; CHECK-NEXT:    [[TMP26:%.*]] = insertelement <4 x float> [[TMP25]], float [[B11]], i32 3
; CHECK-NEXT:    [[TMP27:%.*]] = fdiv <4 x float> [[TMP22]], [[TMP26]]
; CHECK-NEXT:    [[TMP28:%.*]] = insertelement <4 x float> undef, float [[A12]], i32 0
; CHECK-NEXT:    [[TMP29:%.*]] = insertelement <4 x float> [[TMP28]], float [[A13]], i32 1
; CHECK-NEXT:    [[TMP30:%.*]] = insertelement <4 x float> [[TMP29]], float [[A14]], i32 2
; CHECK-NEXT:    [[TMP31:%.*]] = insertelement <4 x float> [[TMP30]], float [[A15]], i32 3
; CHECK-NEXT:    [[TMP32:%.*]] = insertelement <4 x float> undef, float [[B12]], i32 0
; CHECK-NEXT:    [[TMP33:%.*]] = insertelement <4 x float> [[TMP32]], float [[B13]], i32 1
; CHECK-NEXT:    [[TMP34:%.*]] = insertelement <4 x float> [[TMP33]], float [[B14]], i32 2
; CHECK-NEXT:    [[TMP35:%.*]] = insertelement <4 x float> [[TMP34]], float [[B15]], i32 3
; CHECK-NEXT:    [[TMP36:%.*]] = fdiv <4 x float> [[TMP31]], [[TMP35]]
; CHECK-NEXT:    [[TMP37:%.*]] = extractelement <4 x float> [[TMP9]], i32 0
; CHECK-NEXT:    [[R0:%.*]] = insertelement <16 x float> undef, float [[TMP37]], i32 0
; CHECK-NEXT:    [[TMP38:%.*]] = extractelement <4 x float> [[TMP9]], i32 1
; CHECK-NEXT:    [[R1:%.*]] = insertelement <16 x float> [[R0]], float [[TMP38]], i32 1
; CHECK-NEXT:    [[TMP39:%.*]] = extractelement <4 x float> [[TMP9]], i32 2
; CHECK-NEXT:    [[R2:%.*]] = insertelement <16 x float> [[R1]], float [[TMP39]], i32 2
; CHECK-NEXT:    [[TMP40:%.*]] = extractelement <4 x float> [[TMP9]], i32 3
; CHECK-NEXT:    [[R3:%.*]] = insertelement <16 x float> [[R2]], float [[TMP40]], i32 3
; CHECK-NEXT:    [[TMP41:%.*]] = extractelement <4 x float> [[TMP18]], i32 0
; CHECK-NEXT:    [[R4:%.*]] = insertelement <16 x float> [[R3]], float [[TMP41]], i32 4
; CHECK-NEXT:    [[TMP42:%.*]] = extractelement <4 x float> [[TMP18]], i32 1
; CHECK-NEXT:    [[R5:%.*]] = insertelement <16 x float> [[R4]], float [[TMP42]], i32 5
; CHECK-NEXT:    [[TMP43:%.*]] = extractelement <4 x float> [[TMP18]], i32 2
; CHECK-NEXT:    [[R6:%.*]] = insertelement <16 x float> [[R5]], float [[TMP43]], i32 6
; CHECK-NEXT:    [[TMP44:%.*]] = extractelement <4 x float> [[TMP18]], i32 3
; CHECK-NEXT:    [[R7:%.*]] = insertelement <16 x float> [[R6]], float [[TMP44]], i32 7
; CHECK-NEXT:    [[TMP45:%.*]] = extractelement <4 x float> [[TMP27]], i32 0
; CHECK-NEXT:    [[R8:%.*]] = insertelement <16 x float> [[R7]], float [[TMP45]], i32 8
; CHECK-NEXT:    [[TMP46:%.*]] = extractelement <4 x float> [[TMP27]], i32 1
; CHECK-NEXT:    [[R9:%.*]] = insertelement <16 x float> [[R8]], float [[TMP46]], i32 9
; CHECK-NEXT:    [[TMP47:%.*]] = extractelement <4 x float> [[TMP27]], i32 2
; CHECK-NEXT:    [[R10:%.*]] = insertelement <16 x float> [[R9]], float [[TMP47]], i32 10
; CHECK-NEXT:    [[TMP48:%.*]] = extractelement <4 x float> [[TMP27]], i32 3
; CHECK-NEXT:    [[R11:%.*]] = insertelement <16 x float> [[R10]], float [[TMP48]], i32 11
; CHECK-NEXT:    [[TMP49:%.*]] = extractelement <4 x float> [[TMP36]], i32 0
; CHECK-NEXT:    [[R12:%.*]] = insertelement <16 x float> [[R11]], float [[TMP49]], i32 12
; CHECK-NEXT:    [[TMP50:%.*]] = extractelement <4 x float> [[TMP36]], i32 1
; CHECK-NEXT:    [[R13:%.*]] = insertelement <16 x float> [[R12]], float [[TMP50]], i32 13
; CHECK-NEXT:    [[TMP51:%.*]] = extractelement <4 x float> [[TMP36]], i32 2
; CHECK-NEXT:    [[R14:%.*]] = insertelement <16 x float> [[R13]], float [[TMP51]], i32 14
; CHECK-NEXT:    [[TMP52:%.*]] = extractelement <4 x float> [[TMP36]], i32 3
; CHECK-NEXT:    [[R15:%.*]] = insertelement <16 x float> [[R14]], float [[TMP52]], i32 15
; CHECK-NEXT:    ret <16 x float> [[R15]]
;
  %a0  = extractelement <16 x float> %a, i32 0
  %a1  = extractelement <16 x float> %a, i32 1
  %a2  = extractelement <16 x float> %a, i32 2
  %a3  = extractelement <16 x float> %a, i32 3
  %a4  = extractelement <16 x float> %a, i32 4
  %a5  = extractelement <16 x float> %a, i32 5
  %a6  = extractelement <16 x float> %a, i32 6
  %a7  = extractelement <16 x float> %a, i32 7
  %a8  = extractelement <16 x float> %a, i32 8
  %a9  = extractelement <16 x float> %a, i32 9
  %a10 = extractelement <16 x float> %a, i32 10
  %a11 = extractelement <16 x float> %a, i32 11
  %a12 = extractelement <16 x float> %a, i32 12
  %a13 = extractelement <16 x float> %a, i32 13
  %a14 = extractelement <16 x float> %a, i32 14
  %a15 = extractelement <16 x float> %a, i32 15
  %b0  = extractelement <16 x float> %b, i32 0
  %b1  = extractelement <16 x float> %b, i32 1
  %b2  = extractelement <16 x float> %b, i32 2
  %b3  = extractelement <16 x float> %b, i32 3
  %b4  = extractelement <16 x float> %b, i32 4
  %b5  = extractelement <16 x float> %b, i32 5
  %b6  = extractelement <16 x float> %b, i32 6
  %b7  = extractelement <16 x float> %b, i32 7
  %b8  = extractelement <16 x float> %b, i32 8
  %b9  = extractelement <16 x float> %b, i32 9
  %b10 = extractelement <16 x float> %b, i32 10
  %b11 = extractelement <16 x float> %b, i32 11
  %b12 = extractelement <16 x float> %b, i32 12
  %b13 = extractelement <16 x float> %b, i32 13
  %b14 = extractelement <16 x float> %b, i32 14
  %b15 = extractelement <16 x float> %b, i32 15
  %c0  = fdiv float %a0 , %b0
  %c1  = fdiv float %a1 , %b1
  %c2  = fdiv float %a2 , %b2
  %c3  = fdiv float %a3 , %b3
  %c4  = fdiv float %a4 , %b4
  %c5  = fdiv float %a5 , %b5
  %c6  = fdiv float %a6 , %b6
  %c7  = fdiv float %a7 , %b7
  %c8  = fdiv float %a8 , %b8
  %c9  = fdiv float %a9 , %b9
  %c10 = fdiv float %a10, %b10
  %c11 = fdiv float %a11, %b11
  %c12 = fdiv float %a12, %b12
  %c13 = fdiv float %a13, %b13
  %c14 = fdiv float %a14, %b14
  %c15 = fdiv float %a15, %b15
  %r0  = insertelement <16 x float> undef, float %c0 , i32 0
  %r1  = insertelement <16 x float> %r0 ,  float %c1 , i32 1
  %r2  = insertelement <16 x float> %r1 ,  float %c2 , i32 2
  %r3  = insertelement <16 x float> %r2 ,  float %c3 , i32 3
  %r4  = insertelement <16 x float> %r3 ,  float %c4 , i32 4
  %r5  = insertelement <16 x float> %r4 ,  float %c5 , i32 5
  %r6  = insertelement <16 x float> %r5 ,  float %c6 , i32 6
  %r7  = insertelement <16 x float> %r6 ,  float %c7 , i32 7
  %r8  = insertelement <16 x float> %r7 ,  float %c8 , i32 8
  %r9  = insertelement <16 x float> %r8 ,  float %c9 , i32 9
  %r10 = insertelement <16 x float> %r9 ,  float %c10, i32 10
  %r11 = insertelement <16 x float> %r10,  float %c11, i32 11
  %r12 = insertelement <16 x float> %r11,  float %c12, i32 12
  %r13 = insertelement <16 x float> %r12,  float %c13, i32 13
  %r14 = insertelement <16 x float> %r13,  float %c14, i32 14
  %r15 = insertelement <16 x float> %r14,  float %c15, i32 15
  ret <16 x float> %r15
}
