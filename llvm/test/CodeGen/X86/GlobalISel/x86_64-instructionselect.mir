# RUN: llc -mtriple=x86_64-linux-gnu -global-isel -run-pass=instruction-select -verify-machineinstrs %s -o - | FileCheck %s

--- |
  define i64 @test_add_i64(i64 %arg1, i64 %arg2) {
    %ret = add i64 %arg1, %arg2
    ret i64 %ret
  }

  define i32 @test_add_i32(i32 %arg1, i32 %arg2) {
    %ret = add i32 %arg1, %arg2
    ret i32 %ret
  }

  define i64 @test_sub_i64(i64 %arg1, i64 %arg2) {
    %ret = sub i64 %arg1, %arg2
    ret i64 %ret
  }
  
  define i32 @test_sub_i32(i32 %arg1, i32 %arg2) {
    %ret = sub i32 %arg1, %arg2
    ret i32 %ret
  }

...

---
name:            test_add_i64
legalized:       true
regBankSelected: true
# CHECK:      registers:
# CHECK-NEXT:  - { id: 0, class: gr64 }
# CHECK-NEXT:  - { id: 1, class: gr64 }
# CHECK-NEXT:  - { id: 2, class: gr64 }
registers:       
  - { id: 0, class: gpr }
  - { id: 1, class: gpr }
  - { id: 2, class: gpr }
# CHECK:      %0 = COPY %rdi
# CHECK-NEXT: %1 = COPY %rsi
# CHECK-NEXT: %2 = ADD64rr %0, %1
body:             |
  bb.1 (%ir-block.0):
    liveins: %edi, %esi
  
    %0(s64) = COPY %rdi
    %1(s64) = COPY %rsi
    %2(s64) = G_ADD %0, %1

...

---
name:            test_add_i32
legalized:       true
regBankSelected: true
# CHECK:      registers:
# CHECK-NEXT:  - { id: 0, class: gr32 }
# CHECK-NEXT:  - { id: 1, class: gr32 }
# CHECK-NEXT:  - { id: 2, class: gr32 }
registers:       
  - { id: 0, class: gpr }
  - { id: 1, class: gpr }
  - { id: 2, class: gpr }
# CHECK:      %0 = COPY %edi
# CHECK-NEXT: %1 = COPY %esi
# CHECK-NEXT: %2 = ADD32rr %0, %1
body:             |
  bb.1 (%ir-block.0):
    liveins: %edi, %esi
  
    %0(s32) = COPY %edi
    %1(s32) = COPY %esi
    %2(s32) = G_ADD %0, %1

...

---
name:            test_sub_i64
legalized:       true
regBankSelected: true
# CHECK:      registers:
# CHECK-NEXT:  - { id: 0, class: gr64 }
# CHECK-NEXT:  - { id: 1, class: gr64 }
# CHECK-NEXT:  - { id: 2, class: gr64 }
registers:       
  - { id: 0, class: gpr }
  - { id: 1, class: gpr }
  - { id: 2, class: gpr }
# CHECK:      %0 = COPY %rdi
# CHECK-NEXT: %1 = COPY %rsi
# CHECK-NEXT: %2 = SUB64rr %0, %1
body:             |
  bb.1 (%ir-block.0):
    liveins: %edi, %esi
  
    %0(s64) = COPY %rdi
    %1(s64) = COPY %rsi
    %2(s64) = G_SUB %0, %1

...

---
name:            test_sub_i32
legalized:       true
regBankSelected: true
# CHECK:      registers:
# CHECK-NEXT:  - { id: 0, class: gr32 }
# CHECK-NEXT:  - { id: 1, class: gr32 }
# CHECK-NEXT:  - { id: 2, class: gr32 }
registers:       
  - { id: 0, class: gpr }
  - { id: 1, class: gpr }
  - { id: 2, class: gpr }
# CHECK:      %0 = COPY %edi
# CHECK-NEXT: %1 = COPY %esi
# CHECK-NEXT: %2 = SUB32rr %0, %1
body:             |
  bb.1 (%ir-block.0):
    liveins: %edi, %esi
  
    %0(s32) = COPY %edi
    %1(s32) = COPY %esi
    %2(s32) = G_SUB %0, %1

...
