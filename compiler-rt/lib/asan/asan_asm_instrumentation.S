// This file was generated by gen_asm_instrumentation.sh. Please, do not edit
// manually.
.section .text
#if defined(__i386__)
.globl __sanitizer_sanitize_store1
__sanitizer_sanitize_store1:
  pushl %ebp
  movl %esp, %ebp
  pushl %eax
  pushl %ecx
  pushl %edx
  pushfl
  movl 8(%ebp), %eax
  movl %eax, %ecx
  shrl $0x3, %ecx
  movb 0x20000000(%ecx), %cl
  testb %cl, %cl
  je .sanitize_store1_done
  movl %eax, %edx
  andl $0x7, %edx
  movsbl %cl, %ecx
  cmpl %ecx, %edx
  jl .sanitize_store1_done
  pushl %eax
  call __asan_report_store1
.sanitize_store1_done:
  popfl
  popl %edx
  popl %ecx
  popl %eax
  movl %ebp, %esp
  popl %ebp
  ret
.globl __sanitizer_sanitize_load1
__sanitizer_sanitize_load1:
  pushl %ebp
  movl %esp, %ebp
  pushl %eax
  pushl %ecx
  pushl %edx
  pushfl
  movl 8(%ebp), %eax
  movl %eax, %ecx
  shrl $0x3, %ecx
  movb 0x20000000(%ecx), %cl
  testb %cl, %cl
  je .sanitize_load1_done
  movl %eax, %edx
  andl $0x7, %edx
  movsbl %cl, %ecx
  cmpl %ecx, %edx
  jl .sanitize_load1_done
  pushl %eax
  call __asan_report_load1
.sanitize_load1_done:
  popfl
  popl %edx
  popl %ecx
  popl %eax
  movl %ebp, %esp
  popl %ebp
  ret
.globl __sanitizer_sanitize_store2
__sanitizer_sanitize_store2:
  pushl %ebp
  movl %esp, %ebp
  pushl %eax
  pushl %ecx
  pushl %edx
  pushfl
  movl 8(%ebp), %eax
  movl %eax, %ecx
  shrl $0x3, %ecx
  movb 0x20000000(%ecx), %cl
  testb %cl, %cl
  je .sanitize_store2_done
  movl %eax, %edx
  andl $0x7, %edx
  incl %edx
  movsbl %cl, %ecx
  cmpl %ecx, %edx
  jl .sanitize_store2_done
  pushl %eax
  call __asan_report_store2
.sanitize_store2_done:
  popfl
  popl %edx
  popl %ecx
  popl %eax
  movl %ebp, %esp
  popl %ebp
  ret
.globl __sanitizer_sanitize_load2
__sanitizer_sanitize_load2:
  pushl %ebp
  movl %esp, %ebp
  pushl %eax
  pushl %ecx
  pushl %edx
  pushfl
  movl 8(%ebp), %eax
  movl %eax, %ecx
  shrl $0x3, %ecx
  movb 0x20000000(%ecx), %cl
  testb %cl, %cl
  je .sanitize_load2_done
  movl %eax, %edx
  andl $0x7, %edx
  incl %edx
  movsbl %cl, %ecx
  cmpl %ecx, %edx
  jl .sanitize_load2_done
  pushl %eax
  call __asan_report_load2
.sanitize_load2_done:
  popfl
  popl %edx
  popl %ecx
  popl %eax
  movl %ebp, %esp
  popl %ebp
  ret
.globl __sanitizer_sanitize_store4
__sanitizer_sanitize_store4:
  pushl %ebp
  movl %esp, %ebp
  pushl %eax
  pushl %ecx
  pushl %edx
  pushfl
  movl 8(%ebp), %eax
  movl %eax, %ecx
  shrl $0x3, %ecx
  movb 0x20000000(%ecx), %cl
  testb %cl, %cl
  je .sanitize_store4_done
  movl %eax, %edx
  andl $0x7, %edx
  addl $0x3, %edx
  movsbl %cl, %ecx
  cmpl %ecx, %edx
  jl .sanitize_store4_done
  pushl %eax
  call __asan_report_store4
.sanitize_store4_done:
  popfl
  popl %edx
  popl %ecx
  popl %eax
  movl %ebp, %esp
  popl %ebp
  ret
.globl __sanitizer_sanitize_load4
__sanitizer_sanitize_load4:
  pushl %ebp
  movl %esp, %ebp
  pushl %eax
  pushl %ecx
  pushl %edx
  pushfl
  movl 8(%ebp), %eax
  movl %eax, %ecx
  shrl $0x3, %ecx
  movb 0x20000000(%ecx), %cl
  testb %cl, %cl
  je .sanitize_load4_done
  movl %eax, %edx
  andl $0x7, %edx
  addl $0x3, %edx
  movsbl %cl, %ecx
  cmpl %ecx, %edx
  jl .sanitize_load4_done
  pushl %eax
  call __asan_report_load4
.sanitize_load4_done:
  popfl
  popl %edx
  popl %ecx
  popl %eax
  movl %ebp, %esp
  popl %ebp
  ret
.globl __sanitizer_sanitize_store8
__sanitizer_sanitize_store8:
  pushl %ebp
  movl %esp, %ebp
  pushl %eax
  pushl %ecx
  pushfl
  movl 8(%ebp), %eax
  movl %eax, %ecx
  shrl $0x3, %ecx
  cmpb $0x0, 0x20000000(%ecx)
  je .sanitize_store8_done
  pushl %eax
  call __asan_report_store8
.sanitize_store8_done:
  popfl
  popl %ecx
  popl %eax
  movl %ebp, %esp
  popl %ebp
  ret
.globl __sanitizer_sanitize_load8
__sanitizer_sanitize_load8:
  pushl %ebp
  movl %esp, %ebp
  pushl %eax
  pushl %ecx
  pushfl
  movl 8(%ebp), %eax
  movl %eax, %ecx
  shrl $0x3, %ecx
  cmpb $0x0, 0x20000000(%ecx)
  je .sanitize_load8_done
  pushl %eax
  call __asan_report_load8
.sanitize_load8_done:
  popfl
  popl %ecx
  popl %eax
  movl %ebp, %esp
  popl %ebp
  ret
.globl __sanitizer_sanitize_store16
__sanitizer_sanitize_store16:
  pushl %ebp
  movl %esp, %ebp
  pushl %eax
  pushl %ecx
  pushfl
  movl 8(%ebp), %eax
  movl %eax, %ecx
  shrl $0x3, %ecx
  cmpw $0x0, 0x20000000(%ecx)
  je .sanitize_store16_done
  pushl %eax
  call __asan_report_store16
.sanitize_store16_done:
  popfl
  popl %ecx
  popl %eax
  movl %ebp, %esp
  popl %ebp
  ret
.globl __sanitizer_sanitize_load16
__sanitizer_sanitize_load16:
  pushl %ebp
  movl %esp, %ebp
  pushl %eax
  pushl %ecx
  pushfl
  movl 8(%ebp), %eax
  movl %eax, %ecx
  shrl $0x3, %ecx
  cmpw $0x0, 0x20000000(%ecx)
  je .sanitize_load16_done
  pushl %eax
  call __asan_report_load16
.sanitize_load16_done:
  popfl
  popl %ecx
  popl %eax
  movl %ebp, %esp
  popl %ebp
  ret
#endif // defined(__i386__)
#if defined(__x86_64__)
.globl __sanitizer_sanitize_store1
__sanitizer_sanitize_store1:
  pushq %rax
  pushq %rcx
  pushfq
  movq %rdi, %rax
  shrq $0x3, %rax
  movb 0x7fff8000(%rax), %al
  test %al, %al
  je .sanitize_store1_done
  movl %edi, %ecx
  andl $0x7, %ecx
  movsbl %al, %eax
  cmpl %eax, %ecx
  jl .sanitize_store1_done
  call __asan_report_store1
.sanitize_store1_done:
  popfq
  popq %rcx
  popq %rax
  ret
.globl __sanitizer_sanitize_load1
__sanitizer_sanitize_load1:
  pushq %rax
  pushq %rcx
  pushfq
  movq %rdi, %rax
  shrq $0x3, %rax
  movb 0x7fff8000(%rax), %al
  test %al, %al
  je .sanitize_load1_done
  movl %edi, %ecx
  andl $0x7, %ecx
  movsbl %al, %eax
  cmpl %eax, %ecx
  jl .sanitize_load1_done
  call __asan_report_load1
.sanitize_load1_done:
  popfq
  popq %rcx
  popq %rax
  ret
.globl __sanitizer_sanitize_store2
__sanitizer_sanitize_store2:
  pushq %rax
  pushq %rcx
  pushfq
  movq %rdi, %rax
  shrq $0x3, %rax
  movb 0x7fff8000(%rax), %al
  test %al, %al
  je .sanitize_store2_done
  movl %edi, %ecx
  andl $0x7, %ecx
  incl %ecx
  movsbl %al, %eax
  cmpl %eax, %ecx
  jl .sanitize_store2_done
  call __asan_report_store2
.sanitize_store2_done:
  popfq
  popq %rcx
  popq %rax
  ret
.globl __sanitizer_sanitize_load2
__sanitizer_sanitize_load2:
  pushq %rax
  pushq %rcx
  pushfq
  movq %rdi, %rax
  shrq $0x3, %rax
  movb 0x7fff8000(%rax), %al
  test %al, %al
  je .sanitize_load2_done
  movl %edi, %ecx
  andl $0x7, %ecx
  incl %ecx
  movsbl %al, %eax
  cmpl %eax, %ecx
  jl .sanitize_load2_done
  call __asan_report_load2
.sanitize_load2_done:
  popfq
  popq %rcx
  popq %rax
  ret
.globl __sanitizer_sanitize_store4
__sanitizer_sanitize_store4:
  pushq %rax
  pushq %rcx
  pushfq
  movq %rdi, %rax
  shrq $0x3, %rax
  movb 0x7fff8000(%rax), %al
  test %al, %al
  je .sanitize_store4_done
  movl %edi, %ecx
  andl $0x7, %ecx
  addl $0x3, %ecx
  movsbl %al, %eax
  cmpl %eax, %ecx
  jl .sanitize_store4_done
  call __asan_report_store4
.sanitize_store4_done:
  popfq
  popq %rcx
  popq %rax
  ret
.globl __sanitizer_sanitize_load4
__sanitizer_sanitize_load4:
  pushq %rax
  pushq %rcx
  pushfq
  movq %rdi, %rax
  shrq $0x3, %rax
  movb 0x7fff8000(%rax), %al
  test %al, %al
  je .sanitize_load4_done
  movl %edi, %ecx
  andl $0x7, %ecx
  addl $0x3, %ecx
  movsbl %al, %eax
  cmpl %eax, %ecx
  jl .sanitize_load4_done
  call __asan_report_load4
.sanitize_load4_done:
  popfq
  popq %rcx
  popq %rax
  ret
.globl __sanitizer_sanitize_store8
__sanitizer_sanitize_store8:
  pushq %rax
  pushfq
  movq %rdi, %rax
  shrq $0x3, %rax
  cmpb $0x0, 0x7fff8000(%rax)
  je .sanitize_store8_done
  call __asan_report_store8
.sanitize_store8_done:
  popfq
  popq %rax
  ret
.globl __sanitizer_sanitize_load8
__sanitizer_sanitize_load8:
  pushq %rax
  pushfq
  movq %rdi, %rax
  shrq $0x3, %rax
  cmpb $0x0, 0x7fff8000(%rax)
  je .sanitize_load8_done
  call __asan_report_load8
.sanitize_load8_done:
  popfq
  popq %rax
  ret
.globl __sanitizer_sanitize_store16
__sanitizer_sanitize_store16:
  pushq %rax
  pushfq
  movq %rdi, %rax
  shrq $0x3, %rax
  cmpw $0x0, 0x7fff8000(%rax)
  je .sanitize_store16_done
  call __asan_report_store16
.sanitize_store16_done:
  popfq
  popq %rax
  ret
.globl __sanitizer_sanitize_load16
__sanitizer_sanitize_load16:
  pushq %rax
  pushfq
  movq %rdi, %rax
  shrq $0x3, %rax
  cmpw $0x0, 0x7fff8000(%rax)
  je .sanitize_load16_done
  call __asan_report_load16
.sanitize_load16_done:
  popfq
  popq %rax
  ret
#endif // defined(__x86_64__)
